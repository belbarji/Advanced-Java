2022-02-17 20:43:59.168 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5d0a1059
2022-02-17 20:43:59.342 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 20:43:59.468 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 20:43:59.636 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 20:43:59.636 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 20:43:59.638 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 20:43:59.648 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 20:43:59.654 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 20:43:59.656 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 20:43:59.661 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 20:43:59.713 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 20:43:59.715 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 20:44:00.006 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 20:44:00.040 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 20:44:00.042 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 20:44:00.066 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 20:44:00.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6bb7cce7
2022-02-17 20:44:00.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6bb7cce7
2022-02-17 20:44:00.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6bb7cce7
2022-02-17 20:44:00.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@678040b3
2022-02-17 20:44:00.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@18ca3c62
2022-02-17 20:44:00.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@23c650a3
2022-02-17 20:44:00.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@23aae55
2022-02-17 20:44:00.206 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@23aae55
2022-02-17 20:44:00.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@23aae55
2022-02-17 20:44:00.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@60222fd8
2022-02-17 20:44:00.208 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@60222fd8
2022-02-17 20:44:00.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@60222fd8
2022-02-17 20:44:00.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2f6bbeb0
2022-02-17 20:44:00.210 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2f6bbeb0
2022-02-17 20:44:00.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2f6bbeb0
2022-02-17 20:44:00.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@60297f36
2022-02-17 20:44:00.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@60297f36
2022-02-17 20:44:00.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@60297f36
2022-02-17 20:44:00.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@7af707e0
2022-02-17 20:44:00.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@7af707e0
2022-02-17 20:44:00.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7af707e0
2022-02-17 20:44:00.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@73386d72
2022-02-17 20:44:00.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@73386d72
2022-02-17 20:44:00.216 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@73386d72
2022-02-17 20:44:00.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4fbb001b
2022-02-17 20:44:00.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4fbb001b
2022-02-17 20:44:00.218 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4fbb001b
2022-02-17 20:44:00.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2fb69ff6
2022-02-17 20:44:00.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2fb69ff6
2022-02-17 20:44:00.221 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1929425f
2022-02-17 20:44:00.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1929425f
2022-02-17 20:44:00.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@535b8c24
2022-02-17 20:44:00.225 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@535b8c24
2022-02-17 20:44:00.227 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e63cad
2022-02-17 20:44:00.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@20921b9b
2022-02-17 20:44:00.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@3f3c7bdb
2022-02-17 20:44:00.231 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3f3c7bdb
2022-02-17 20:44:00.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@5b989dc7
2022-02-17 20:44:00.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5b989dc7
2022-02-17 20:44:00.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@62d0ac62
2022-02-17 20:44:00.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@62d0ac62
2022-02-17 20:44:00.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@41c89d2f
2022-02-17 20:44:00.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@41c89d2f
2022-02-17 20:44:00.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@3c818ac4
2022-02-17 20:44:00.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@3c818ac4
2022-02-17 20:44:00.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@72889280
2022-02-17 20:44:00.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@72889280
2022-02-17 20:44:00.252 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77e80a5e
2022-02-17 20:44:00.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@77e80a5e
2022-02-17 20:44:00.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@503fbbc6
2022-02-17 20:44:00.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@503fbbc6
2022-02-17 20:44:00.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@415e0bcb
2022-02-17 20:44:00.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@415e0bcb
2022-02-17 20:44:00.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@3163987e
2022-02-17 20:44:00.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3163987e
2022-02-17 20:44:00.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@9ec531
2022-02-17 20:44:00.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@9ec531
2022-02-17 20:44:00.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c383e33
2022-02-17 20:44:00.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c383e33
2022-02-17 20:44:00.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c383e33
2022-02-17 20:44:00.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4287d447
2022-02-17 20:44:00.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@36a7abe1
2022-02-17 20:44:00.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@36a7abe1
2022-02-17 20:44:00.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@36a7abe1
2022-02-17 20:44:00.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3ae66c85
2022-02-17 20:44:00.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@367795c7
2022-02-17 20:44:00.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@100f9bbe
2022-02-17 20:44:00.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@100f9bbe
2022-02-17 20:44:00.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@3569edd5
2022-02-17 20:44:00.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3569edd5
2022-02-17 20:44:00.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@238ad8c
2022-02-17 20:44:00.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@238ad8c
2022-02-17 20:44:00.294 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@1ce93c18
2022-02-17 20:44:00.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1ce93c18
2022-02-17 20:44:00.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7de4a01f
2022-02-17 20:44:00.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7de4a01f
2022-02-17 20:44:00.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@78b236a0
2022-02-17 20:44:00.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@4b61d0c6
2022-02-17 20:44:00.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@4b61d0c6
2022-02-17 20:44:00.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@4b61d0c6
2022-02-17 20:44:00.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@263558c9
2022-02-17 20:44:00.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@263558c9
2022-02-17 20:44:00.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@263558c9
2022-02-17 20:44:00.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@1059754c
2022-02-17 20:44:00.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@24e8de5c
2022-02-17 20:44:00.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@3a43d133
2022-02-17 20:44:00.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@3a43d133
2022-02-17 20:44:00.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@3a43d133
2022-02-17 20:44:00.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@511816c0
2022-02-17 20:44:00.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@511816c0
2022-02-17 20:44:00.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@511816c0
2022-02-17 20:44:00.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@288a4658
2022-02-17 20:44:00.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@29006752
2022-02-17 20:44:00.320 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@76adb233
2022-02-17 20:44:00.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@76adb233
2022-02-17 20:44:00.323 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66eb985d
2022-02-17 20:44:00.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@81ff872
2022-02-17 20:44:00.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@81ff872
2022-02-17 20:44:00.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@39ab59f8
2022-02-17 20:44:00.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@39ab59f8
2022-02-17 20:44:00.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@29d37757
2022-02-17 20:44:00.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@79b663b3
2022-02-17 20:44:00.332 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@5652f555
2022-02-17 20:44:00.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@241a0c3a
2022-02-17 20:44:00.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@241a0c3a
2022-02-17 20:44:00.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@ba1f559
2022-02-17 20:44:00.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3f4f9acd
2022-02-17 20:44:00.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@46baf579
2022-02-17 20:44:00.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 20:44:00.341 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 20:44:00.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 20:44:00.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 20:44:00.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 20:44:00.360 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@f2c488] into BootstrapContext; was [null]
2022-02-17 20:44:00.361 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@54acff7d] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7bc9e6ab]
2022-02-17 20:44:00.432 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 20:44:00.433 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 20:44:00.451 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 20:44:00.452 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 20:44:00.453 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 20:44:00.453 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 20:44:00.454 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 20:44:00.459 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 20:44:00.460 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 20:44:00.463 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 20:44:00.464 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 20:44:00.466 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 20:44:00.467 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 20:44:00.468 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 20:44:00.469 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 20:44:00.470 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 20:44:00.480 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 20:44:00.491 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 20:44:00.492 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 20:44:00.493 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 20:44:00.498 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 20:44:00.499 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 20:44:00.791 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 20:44:00.792 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 20:44:00.793 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 20:44:00.816 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 20:44:00.841 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 20:44:00.843 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 20:44:00.867 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bdd2027] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@31f20c9f]
2022-02-17 20:44:00.905 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 20:44:00.918 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 20:44:00.936 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 20:44:00.942 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 20:44:00.948 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 20:44:00.977 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 20:44:00.980 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 20:44:00.981 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 20:44:00.983 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 20:44:00.986 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 20:44:00.991 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 20:44:00.995 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 20:44:01.015 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 20:44:01.016 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 20:44:01.032 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 20:44:01.035 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 20:44:01.036 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 20:44:01.036 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 20:44:01.057 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 20:44:01.057 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 20:44:01.062 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 20:44:01.138 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 20:44:01.140 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 20:44:01.141 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 20:44:01.141 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 20:44:01.141 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 20:44:01.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 20:44:01.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 20:44:01.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 20:44:01.143 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 20:44:01.143 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 20:44:01.143 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 20:44:01.143 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 20:44:01.144 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 20:44:01.144 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 20:44:01.144 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 20:44:01.145 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 20:44:01.145 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 20:44:01.145 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 20:44:01.145 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 20:44:01.146 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 20:44:01.146 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 20:44:01.146 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 20:44:01.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 20:44:01.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 20:44:01.147 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 20:44:01.148 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 20:44:01.148 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 20:44:01.149 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 20:44:01.149 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 20:44:01.149 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 20:44:01.150 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 20:44:01.150 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 20:44:01.151 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 20:44:01.151 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 20:44:01.153 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 20:44:01.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 20:44:01.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 20:44:01.154 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 20:44:01.155 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 20:44:01.236 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:44:01.243 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:44:01.257 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 20:44:01.258 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4b97c4ad, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 20:44:01.271 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 20:44:01.273 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 20:44:01.273 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@bdd2027] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@3bd2af5b]
2022-02-17 20:44:01.336 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 20:44:01.336 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 20:44:01.634 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 20:44:01.634 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 20:44:01.635 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 20:44:01.635 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 20:44:01.636 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 20:44:01.636 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 20:44:01.636 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 20:44:01.662 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6d480c]
2022-02-17 20:44:01.663 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 20:44:01.664 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 20:44:01.685 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 20:44:01.690 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 20:44:01.692 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 20:44:01.738 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 20:44:01.741 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5df63359] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 20:44:01.760 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 20:44:01.761 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@839df62] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 20:44:01.775 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 20:44:01.776 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 20:44:01.782 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 20:44:01.783 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 20:44:01.784 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 20:44:01.785 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 20:44:01.790 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:44:01.799 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@22dc59b2
2022-02-17 20:44:01.801 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 04cc0a09-a17b-4e88-95ca-31d702ed214a (<unnamed>)
2022-02-17 20:44:01.801 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 20:44:01.877 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-17 20:44:01.908 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-02-17 20:44:01.908 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-17 20:44:01.927 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-17 20:44:01.931 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-17 20:44:01.964 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-02-17 20:44:01.964 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-17 20:44:01.968 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-17 20:44:01.969 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-17 20:44:01.970 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-17 20:44:01.979 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-02-17 20:44:01.980 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-17 20:44:01.981 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-17 20:44:01.983 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-17 20:44:01.989 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-17 20:44:01.989 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-17 20:55:25.252 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de76cc7
2022-02-17 20:55:25.420 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 20:55:25.551 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 20:55:25.706 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 20:55:25.707 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 20:55:25.708 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 20:55:25.719 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 20:55:25.727 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 20:55:25.729 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 20:55:25.737 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 20:55:25.813 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 20:55:25.816 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 20:55:26.086 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 20:55:26.110 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 20:55:26.113 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 20:55:26.144 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 20:55:26.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 20:55:26.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 20:55:26.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 20:55:26.394 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64a1923a
2022-02-17 20:55:26.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44d70181
2022-02-17 20:55:26.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@88a8218
2022-02-17 20:55:26.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 20:55:26.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 20:55:26.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 20:55:26.406 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 20:55:26.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 20:55:26.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 20:55:26.410 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-17 20:55:26.411 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-17 20:55:26.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18151a14
2022-02-17 20:55:26.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 20:55:26.415 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 20:55:26.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 20:55:26.418 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 20:55:26.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 20:55:26.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 20:55:26.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-17 20:55:26.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-17 20:55:26.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@125c082e
2022-02-17 20:55:26.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 20:55:26.426 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 20:55:26.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 20:55:26.429 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-17 20:55:26.429 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-17 20:55:26.431 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-17 20:55:26.432 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-17 20:55:26.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@55b62629
2022-02-17 20:55:26.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@55b62629
2022-02-17 20:55:26.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33a053d
2022-02-17 20:55:26.438 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ba745bc
2022-02-17 20:55:26.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@2a3a299
2022-02-17 20:55:26.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a3a299
2022-02-17 20:55:26.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@42561fba
2022-02-17 20:55:26.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@42561fba
2022-02-17 20:55:26.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-17 20:55:26.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-17 20:55:26.452 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-17 20:55:26.454 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-17 20:55:26.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-17 20:55:26.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-17 20:55:26.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-17 20:55:26.459 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-17 20:55:26.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-17 20:55:26.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-17 20:55:26.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-17 20:55:26.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-17 20:55:26.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-17 20:55:26.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-17 20:55:26.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@5f233b26
2022-02-17 20:55:26.472 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f233b26
2022-02-17 20:55:26.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@210f0cc1
2022-02-17 20:55:26.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@210f0cc1
2022-02-17 20:55:26.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-17 20:55:26.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-17 20:55:26.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76304b46
2022-02-17 20:55:26.481 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e6d7365
2022-02-17 20:55:26.483 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 20:55:26.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 20:55:26.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 20:55:26.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4604b900
2022-02-17 20:55:26.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3956b302
2022-02-17 20:55:26.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@673bb956
2022-02-17 20:55:26.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673bb956
2022-02-17 20:55:26.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-17 20:55:26.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-17 20:55:26.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-17 20:55:26.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-17 20:55:26.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@1532c619
2022-02-17 20:55:26.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1532c619
2022-02-17 20:55:26.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-17 20:55:26.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-17 20:55:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34448e6c
2022-02-17 20:55:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 20:55:26.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 20:55:26.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 20:55:26.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 20:55:26.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 20:55:26.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 20:55:26.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@48e7b3d2
2022-02-17 20:55:26.505 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@110844f6
2022-02-17 20:55:26.506 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 20:55:26.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 20:55:26.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 20:55:26.509 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 20:55:26.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 20:55:26.510 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 20:55:26.511 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@452c8a40
2022-02-17 20:55:26.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@66d57c1b
2022-02-17 20:55:26.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@36453307
2022-02-17 20:55:26.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36453307
2022-02-17 20:55:26.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75504cef
2022-02-17 20:55:26.519 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@3e598df9
2022-02-17 20:55:26.520 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e598df9
2022-02-17 20:55:26.522 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@111610e6
2022-02-17 20:55:26.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@111610e6
2022-02-17 20:55:26.523 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25cc7470
2022-02-17 20:55:26.524 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d28bcd5
2022-02-17 20:55:26.526 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@55120f99
2022-02-17 20:55:26.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-17 20:55:26.530 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-17 20:55:26.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46baf579
2022-02-17 20:55:26.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 20:55:26.531 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 20:55:26.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 20:55:26.532 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 20:55:26.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 20:55:26.533 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-17 20:55:26.534 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-17 20:55:26.548 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7bc9e6ab] into BootstrapContext; was [null]
2022-02-17 20:55:26.548 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5488b5c5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58]
2022-02-17 20:55:26.615 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 20:55:26.616 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 20:55:26.632 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 20:55:26.633 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 20:55:26.635 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 20:55:26.636 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 20:55:26.639 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 20:55:26.641 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 20:55:26.641 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 20:55:26.644 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 20:55:26.646 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 20:55:26.648 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 20:55:26.649 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 20:55:26.652 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 20:55:26.653 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 20:55:26.656 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 20:55:26.668 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 20:55:26.678 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 20:55:26.679 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 20:55:26.680 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 20:55:26.691 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 20:55:26.692 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 20:55:27.003 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 20:55:27.003 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 20:55:27.004 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 20:55:27.023 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 20:55:27.041 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 20:55:27.042 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 20:55:27.064 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49a26d19] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@730e5763]
2022-02-17 20:55:27.102 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 20:55:27.116 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 20:55:27.134 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 20:55:27.139 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 20:55:27.144 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 20:55:27.170 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 20:55:27.173 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 20:55:27.174 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 20:55:27.174 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 20:55:27.176 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 20:55:27.180 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 20:55:27.183 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 20:55:27.188 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 20:55:27.190 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 20:55:27.191 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 20:55:27.192 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 20:55:27.193 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 20:55:27.194 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 20:55:27.204 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 20:55:27.205 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 20:55:27.207 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 20:55:27.297 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 20:55:27.300 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 20:55:27.300 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 20:55:27.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 20:55:27.301 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 20:55:27.302 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 20:55:27.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 20:55:27.304 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 20:55:27.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 20:55:27.305 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 20:55:27.306 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 20:55:27.306 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 20:55:27.307 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 20:55:27.307 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 20:55:27.308 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 20:55:27.308 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 20:55:27.309 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 20:55:27.309 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 20:55:27.313 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 20:55:27.314 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 20:55:27.314 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 20:55:27.315 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 20:55:27.315 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 20:55:27.316 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 20:55:27.316 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 20:55:27.317 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 20:55:27.317 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 20:55:27.318 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 20:55:27.319 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 20:55:27.321 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 20:55:27.321 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 20:55:27.322 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 20:55:27.322 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 20:55:27.323 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 20:55:27.323 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 20:55:27.324 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 20:55:27.324 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 20:55:27.324 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 20:55:27.326 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 20:55:27.400 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:55:27.402 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:55:27.435 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 20:55:27.435 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@70972170, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 20:55:27.454 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 20:55:27.455 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 20:55:27.455 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@49a26d19] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@372ca2d6]
2022-02-17 20:55:27.529 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 20:55:27.535 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 20:55:27.793 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 20:55:27.793 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 20:55:27.793 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 20:55:27.793 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 20:55:27.794 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 20:55:27.794 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 20:55:27.794 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 20:55:27.818 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b47731f]
2022-02-17 20:55:27.820 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 20:55:27.821 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 20:55:27.834 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 20:55:27.839 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 20:55:27.843 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 20:55:27.898 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 20:55:27.901 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@f0a66bd] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 20:55:27.920 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 20:55:27.921 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@47148f3f] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 20:55:27.931 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 20:55:27.932 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 20:55:27.940 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 20:55:27.941 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 20:55:27.943 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 20:55:27.943 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 20:55:27.950 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 20:55:27.957 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@32f5ecc4
2022-02-17 20:55:27.959 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: b301b2cc-5632-4d5c-80bb-de2babb8b86f (<unnamed>)
2022-02-17 20:55:27.959 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 20:55:28.041 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-17 21:11:15.506 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de76cc7
2022-02-17 21:11:15.671 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 21:11:15.801 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 21:11:15.958 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 21:11:15.959 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 21:11:15.960 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 21:11:15.969 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 21:11:15.976 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 21:11:15.978 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 21:11:15.985 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 21:11:16.074 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 21:11:16.078 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 21:11:16.486 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 21:11:16.511 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 21:11:16.513 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 21:11:16.538 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 21:11:16.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 21:11:16.659 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 21:11:16.660 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-17 21:11:16.661 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64a1923a
2022-02-17 21:11:16.662 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44d70181
2022-02-17 21:11:16.663 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@88a8218
2022-02-17 21:11:16.664 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 21:11:16.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 21:11:16.665 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@680bddf5
2022-02-17 21:11:16.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 21:11:16.667 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 21:11:16.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26f1249d
2022-02-17 21:11:16.669 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-17 21:11:16.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-17 21:11:16.670 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18151a14
2022-02-17 21:11:16.671 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 21:11:16.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 21:11:16.672 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-17 21:11:16.673 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 21:11:16.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 21:11:16.674 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ecedf21
2022-02-17 21:11:16.675 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-17 21:11:16.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-17 21:11:16.676 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@125c082e
2022-02-17 21:11:16.677 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 21:11:16.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 21:11:16.678 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@341a8659
2022-02-17 21:11:16.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-17 21:11:16.679 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-17 21:11:16.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-17 21:11:16.681 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-17 21:11:16.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@55b62629
2022-02-17 21:11:16.682 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@55b62629
2022-02-17 21:11:16.683 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33a053d
2022-02-17 21:11:16.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ba745bc
2022-02-17 21:11:16.685 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@2a3a299
2022-02-17 21:11:16.686 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a3a299
2022-02-17 21:11:16.687 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@42561fba
2022-02-17 21:11:16.688 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@42561fba
2022-02-17 21:11:16.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-17 21:11:16.692 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-17 21:11:16.693 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-17 21:11:16.694 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-17 21:11:16.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-17 21:11:16.695 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-17 21:11:16.696 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-17 21:11:16.697 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-17 21:11:16.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-17 21:11:16.700 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-17 21:11:16.702 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-17 21:11:16.703 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-17 21:11:16.705 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-17 21:11:16.706 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-17 21:11:16.709 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@5f233b26
2022-02-17 21:11:16.710 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f233b26
2022-02-17 21:11:16.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@210f0cc1
2022-02-17 21:11:16.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@210f0cc1
2022-02-17 21:11:16.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-17 21:11:16.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-17 21:11:16.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76304b46
2022-02-17 21:11:16.717 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e6d7365
2022-02-17 21:11:16.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 21:11:16.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 21:11:16.719 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-17 21:11:16.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4604b900
2022-02-17 21:11:16.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3956b302
2022-02-17 21:11:16.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@673bb956
2022-02-17 21:11:16.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673bb956
2022-02-17 21:11:16.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-17 21:11:16.726 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-17 21:11:16.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-17 21:11:16.728 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-17 21:11:16.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@1532c619
2022-02-17 21:11:16.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1532c619
2022-02-17 21:11:16.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-17 21:11:16.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-17 21:11:16.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34448e6c
2022-02-17 21:11:16.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 21:11:16.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 21:11:16.734 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@65e7f52a
2022-02-17 21:11:16.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 21:11:16.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 21:11:16.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-17 21:11:16.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@48e7b3d2
2022-02-17 21:11:16.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@110844f6
2022-02-17 21:11:16.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 21:11:16.741 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 21:11:16.741 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-17 21:11:16.742 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 21:11:16.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 21:11:16.743 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-17 21:11:16.744 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@452c8a40
2022-02-17 21:11:16.745 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@66d57c1b
2022-02-17 21:11:16.747 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@36453307
2022-02-17 21:11:16.747 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36453307
2022-02-17 21:11:16.748 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75504cef
2022-02-17 21:11:16.750 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@3e598df9
2022-02-17 21:11:16.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e598df9
2022-02-17 21:11:16.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@111610e6
2022-02-17 21:11:16.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@111610e6
2022-02-17 21:11:16.754 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25cc7470
2022-02-17 21:11:16.755 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d28bcd5
2022-02-17 21:11:16.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@55120f99
2022-02-17 21:11:16.760 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-17 21:11:16.760 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-17 21:11:16.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46baf579
2022-02-17 21:11:16.761 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 21:11:16.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 21:11:16.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 21:11:16.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 21:11:16.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 21:11:16.763 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-17 21:11:16.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-17 21:11:16.781 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7bc9e6ab] into BootstrapContext; was [null]
2022-02-17 21:11:16.782 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5488b5c5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58]
2022-02-17 21:11:16.843 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 21:11:16.844 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 21:11:16.857 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 21:11:16.858 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 21:11:16.859 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:11:16.859 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:11:16.860 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 21:11:16.862 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 21:11:16.863 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 21:11:16.864 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:11:16.867 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 21:11:16.868 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 21:11:16.869 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 21:11:16.870 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 21:11:16.870 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:11:16.872 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 21:11:16.878 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 21:11:16.885 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 21:11:16.886 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 21:11:16.886 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 21:11:16.889 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 21:11:16.889 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 21:11:17.166 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 21:11:17.167 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 21:11:17.167 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 21:11:17.190 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 21:11:17.218 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 21:11:17.220 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 21:11:17.252 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42210be1] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1eb2d371]
2022-02-17 21:11:17.301 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 21:11:17.314 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 21:11:17.334 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 21:11:17.341 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 21:11:17.348 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 21:11:17.378 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 21:11:17.381 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:11:17.382 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:11:17.384 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 21:11:17.387 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 21:11:17.391 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 21:11:17.394 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 21:11:17.398 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 21:11:17.401 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 21:11:17.402 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 21:11:17.402 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 21:11:17.403 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 21:11:17.403 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 21:11:17.418 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 21:11:17.419 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 21:11:17.421 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 21:11:17.486 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 21:11:17.488 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 21:11:17.488 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 21:11:17.489 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 21:11:17.489 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 21:11:17.489 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 21:11:17.490 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 21:11:17.491 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 21:11:17.492 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 21:11:17.492 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 21:11:17.493 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 21:11:17.493 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 21:11:17.494 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 21:11:17.494 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 21:11:17.494 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 21:11:17.495 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 21:11:17.495 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 21:11:17.495 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 21:11:17.496 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 21:11:17.496 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 21:11:17.496 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 21:11:17.496 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 21:11:17.497 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 21:11:17.497 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 21:11:17.497 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 21:11:17.498 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 21:11:17.498 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 21:11:17.498 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 21:11:17.499 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 21:11:17.499 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 21:11:17.501 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 21:11:17.501 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 21:11:17.502 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 21:11:17.502 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 21:11:17.503 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 21:11:17.503 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 21:11:17.504 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 21:11:17.504 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 21:11:17.504 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 21:11:17.595 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:11:17.596 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:11:17.610 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 21:11:17.610 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@6caf7803, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 21:11:17.624 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 21:11:17.625 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 21:11:17.626 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@42210be1] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@4dba773d]
2022-02-17 21:11:17.683 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:11:17.683 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:11:17.906 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 21:11:17.906 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 21:11:17.906 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 21:11:17.906 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 21:11:17.906 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 21:11:17.907 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 21:11:17.907 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 21:11:17.929 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e13f304]
2022-02-17 21:11:17.930 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 21:11:17.931 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 21:11:17.947 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 21:11:17.951 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 21:11:17.953 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 21:11:17.990 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 21:11:17.993 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@5dfe23e8] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:11:18.009 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 21:11:18.009 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@7d528cf7] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:11:18.019 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 21:11:18.020 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 21:11:18.028 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:11:18.029 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:11:18.031 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 21:11:18.031 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 21:11:18.039 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:11:18.047 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@115ca7de
2022-02-17 21:11:18.049 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 86fc005d-1da4-42e8-9fd1-87cb1ed7e7c3 (<unnamed>)
2022-02-17 21:11:18.050 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 21:11:18.123 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-17 21:22:32.612 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@54bff557
2022-02-17 21:22:32.780 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 21:22:32.917 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 21:22:33.054 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 21:22:33.055 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 21:22:33.056 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 21:22:33.068 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 21:22:33.077 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 21:22:33.080 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 21:22:33.089 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 21:22:33.189 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 21:22:33.193 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 21:22:33.535 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 21:22:33.553 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 21:22:33.555 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 21:22:33.577 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 21:22:33.711 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:22:33.712 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:22:33.713 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:22:33.714 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d2a6eac
2022-02-17 21:22:33.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6aa648b9
2022-02-17 21:22:33.716 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b1f030
2022-02-17 21:22:33.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:22:33.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:22:33.718 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:22:33.720 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:22:33.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:22:33.721 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:22:33.722 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:22:33.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:22:33.723 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:22:33.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:22:33.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:22:33.725 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:22:33.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:22:33.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:22:33.727 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:22:33.729 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:22:33.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:22:33.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:22:33.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:22:33.731 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:22:33.732 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:22:33.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:22:33.733 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:22:33.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:22:33.735 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:22:33.736 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:22:33.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:22:33.737 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14a54ef6
2022-02-17 21:22:33.738 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@654b72c0
2022-02-17 21:22:33.739 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:22:33.740 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:22:33.741 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:22:33.742 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:22:33.747 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:22:33.747 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:22:33.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:22:33.749 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:22:33.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:22:33.751 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:22:33.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:22:33.753 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:22:33.755 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:22:33.756 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:22:33.758 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:22:33.759 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:22:33.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:22:33.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:22:33.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:22:33.765 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:22:33.768 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:22:33.769 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:22:33.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:22:33.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:22:33.771 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:22:33.774 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0da600
2022-02-17 21:22:33.775 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:22:33.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:22:33.776 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:22:33.777 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73d6d0c
2022-02-17 21:22:33.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1500e009
2022-02-17 21:22:33.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:22:33.780 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:22:33.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:22:33.782 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:22:33.783 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:22:33.784 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:22:33.785 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:22:33.786 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:22:33.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:22:33.787 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:22:33.788 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60e9df3c
2022-02-17 21:22:33.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:22:33.790 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:22:33.791 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:22:33.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:22:33.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:22:33.794 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:22:33.795 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f4037ed
2022-02-17 21:22:33.796 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@6f89f665
2022-02-17 21:22:33.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:22:33.797 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:22:33.798 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:22:33.799 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:22:33.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:22:33.800 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:22:33.801 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@534243e4
2022-02-17 21:22:33.803 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@27494e46
2022-02-17 21:22:33.805 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:22:33.806 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:22:33.807 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c8a68c1
2022-02-17 21:22:33.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:22:33.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:22:33.811 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:22:33.812 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:22:33.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4beddc56
2022-02-17 21:22:33.813 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7882c44a
2022-02-17 21:22:33.815 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@794b435f
2022-02-17 21:22:33.819 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:22:33.820 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:22:33.821 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 21:22:33.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 21:22:33.822 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 21:22:33.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 21:22:33.823 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 21:22:33.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-17 21:22:33.824 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-17 21:22:33.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@705202d1
2022-02-17 21:22:33.842 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5488b5c5] into BootstrapContext; was [null]
2022-02-17 21:22:33.842 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@712ca57b]
2022-02-17 21:22:33.919 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 21:22:33.919 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 21:22:33.933 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 21:22:33.934 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 21:22:33.935 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:22:33.935 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:22:33.936 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 21:22:33.938 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 21:22:33.938 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 21:22:33.940 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:22:33.941 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 21:22:33.942 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 21:22:33.943 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 21:22:33.944 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 21:22:33.944 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:22:33.946 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 21:22:33.953 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 21:22:33.959 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 21:22:33.960 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 21:22:33.960 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 21:22:33.966 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 21:22:33.969 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 21:22:34.219 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 21:22:34.220 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 21:22:34.220 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 21:22:34.237 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 21:22:34.256 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 21:22:34.258 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 21:22:34.286 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f966719]
2022-02-17 21:22:34.326 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 21:22:34.339 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 21:22:34.362 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 21:22:34.368 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 21:22:34.374 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 21:22:34.404 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 21:22:34.408 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:22:34.409 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:22:34.410 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 21:22:34.413 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 21:22:34.418 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 21:22:34.422 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 21:22:34.426 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 21:22:34.427 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 21:22:34.435 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 21:22:34.436 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 21:22:34.437 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 21:22:34.437 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 21:22:34.458 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 21:22:34.458 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 21:22:34.465 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 21:22:34.561 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 21:22:34.563 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 21:22:34.564 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 21:22:34.564 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 21:22:34.565 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 21:22:34.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 21:22:34.566 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 21:22:34.567 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 21:22:34.568 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 21:22:34.569 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 21:22:34.570 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 21:22:34.570 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 21:22:34.570 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 21:22:34.571 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 21:22:34.571 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 21:22:34.571 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 21:22:34.571 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 21:22:34.572 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 21:22:34.572 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 21:22:34.572 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 21:22:34.572 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 21:22:34.573 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 21:22:34.573 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 21:22:34.573 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 21:22:34.573 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 21:22:34.574 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 21:22:34.574 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 21:22:34.575 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 21:22:34.575 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 21:22:34.575 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 21:22:34.576 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 21:22:34.576 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 21:22:34.576 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 21:22:34.576 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 21:22:34.576 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 21:22:34.577 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 21:22:34.577 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 21:22:34.577 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 21:22:34.578 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 21:22:34.664 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:22:34.666 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:22:34.680 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 21:22:34.680 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1716e8c5, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 21:22:34.694 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 21:22:34.695 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 21:22:34.695 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b306b9f]
2022-02-17 21:22:34.758 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:22:34.758 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:22:35.004 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 21:22:35.005 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 21:22:35.005 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 21:22:35.005 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 21:22:35.006 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 21:22:35.006 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 21:22:35.006 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 21:22:35.032 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c067c0d]
2022-02-17 21:22:35.033 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 21:22:35.034 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 21:22:35.053 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 21:22:35.059 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 21:22:35.063 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 21:22:35.121 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 21:22:35.123 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@67d32a54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:22:35.141 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 21:22:35.142 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66fb45e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:22:35.154 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 21:22:35.155 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 21:22:35.164 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:22:35.165 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:22:35.167 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 21:22:35.167 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 21:22:35.175 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:22:35.182 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@553da911
2022-02-17 21:22:35.185 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 37b02f42-4271-4053-aab5-5ac496e78dde (<unnamed>)
2022-02-17 21:22:35.186 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 21:22:35.261 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-17 21:54:24.503 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@54bff557
2022-02-17 21:54:24.691 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 21:54:24.816 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 21:54:24.959 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 21:54:24.959 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 21:54:24.967 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 21:54:24.975 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 21:54:24.975 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 21:54:24.975 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 21:54:24.991 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 21:54:25.054 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 21:54:25.054 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 21:54:25.460 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 21:54:25.480 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 21:54:25.480 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 21:54:25.512 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 21:54:25.637 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d2a6eac
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6aa648b9
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b1f030
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:54:25.652 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14a54ef6
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@654b72c0
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:54:25.668 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:54:25.684 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:54:25.699 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0da600
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73d6d0c
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1500e009
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:54:25.715 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60e9df3c
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f4037ed
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@6f89f665
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@534243e4
2022-02-17 21:54:25.730 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@27494e46
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c8a68c1
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4beddc56
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7882c44a
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@794b435f
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:54:25.746 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-17 21:54:25.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@705202d1
2022-02-17 21:54:25.777 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5488b5c5] into BootstrapContext; was [null]
2022-02-17 21:54:25.777 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@712ca57b]
2022-02-17 21:54:25.840 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 21:54:25.840 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 21:54:25.855 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 21:54:25.871 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 21:54:25.871 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 21:54:25.871 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:54:25.871 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 21:54:25.871 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 21:54:25.887 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 21:54:25.887 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 21:54:25.887 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 21:54:25.887 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 21:54:25.887 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 21:54:26.147 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 21:54:26.147 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 21:54:26.147 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 21:54:26.178 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 21:54:26.193 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 21:54:26.193 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 21:54:26.225 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f966719]
2022-02-17 21:54:26.256 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 21:54:26.272 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 21:54:26.287 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 21:54:26.287 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 21:54:26.287 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 21:54:26.318 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 21:54:26.318 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:54:26.318 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:54:26.318 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 21:54:26.334 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 21:54:26.350 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 21:54:26.350 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 21:54:26.350 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 21:54:26.350 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 21:54:26.350 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 21:54:26.365 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 21:54:26.443 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 21:54:26.459 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 21:54:26.553 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:54:26.553 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:54:26.590 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 21:54:26.590 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1716e8c5, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 21:54:26.606 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 21:54:26.606 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 21:54:26.606 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b306b9f]
2022-02-17 21:54:26.684 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:54:26.684 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 21:54:26.934 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 21:54:26.965 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c067c0d]
2022-02-17 21:54:26.965 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 21:54:26.973 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 21:54:26.981 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 21:54:26.981 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 21:54:26.989 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 21:54:27.036 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 21:54:27.036 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@67d32a54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:54:27.052 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 21:54:27.052 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66fb45e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:54:27.052 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 21:54:27.067 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 21:54:27.067 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:54:27.067 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:54:27.067 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 21:54:27.067 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 21:54:27.083 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:54:27.083 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@553da911
2022-02-17 21:54:27.083 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 1aa264c0-78eb-42e7-ae8b-f42f7c19688e (<unnamed>)
2022-02-17 21:54:27.083 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 21:54:27.161 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-17 21:56:01.761 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@54bff557
2022-02-17 21:56:01.922 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-17 21:56:02.047 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-17 21:56:02.200 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-17 21:56:02.200 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-17 21:56:02.215 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-17 21:56:02.215 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-17 21:56:02.231 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-17 21:56:02.231 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-17 21:56:02.231 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-17 21:56:02.309 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-17 21:56:02.309 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-17 21:56:02.590 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-17 21:56:02.606 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-17 21:56:02.606 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-17 21:56:02.621 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-17 21:56:02.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:56:02.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:56:02.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-17 21:56:02.762 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d2a6eac
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6aa648b9
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b1f030
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@710b30ef
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:56:02.778 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64711bf2
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@df4b72
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74cf8b28
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@584f5497
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4943defe
2022-02-17 21:56:02.793 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757f675c
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@a53bb6f
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14a54ef6
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@654b72c0
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:56:02.809 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7da10b5b
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3003697
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-17 21:56:02.825 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-17 21:56:02.840 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:56:02.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-17 21:56:02.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:56:02.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44f9779c
2022-02-17 21:56:02.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:56:02.856 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19542407
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fa3be26
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0da600
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-17 21:56:02.871 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73d6d0c
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1500e009
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46044faa
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:56:02.887 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60e9df3c
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@304b9f1a
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f4037ed
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@6f89f665
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:56:02.903 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@534243e4
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@27494e46
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c8a68c1
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:56:02.918 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ad4936c
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4beddc56
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7882c44a
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@794b435f
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-17 21:56:02.934 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-17 21:56:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@705202d1
2022-02-17 21:56:02.965 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5488b5c5] into BootstrapContext; was [null]
2022-02-17 21:56:02.965 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@712ca57b]
2022-02-17 21:56:03.043 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-17 21:56:03.043 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-17 21:56:03.059 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-17 21:56:03.059 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-17 21:56:03.059 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:56:03.059 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-17 21:56:03.059 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-17 21:56:03.074 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-17 21:56:03.090 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-17 21:56:03.090 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-17 21:56:03.090 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-17 21:56:03.090 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-17 21:56:03.090 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-17 21:56:03.106 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-17 21:56:03.295 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-17 21:56:03.295 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-17 21:56:03.295 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-17 21:56:03.311 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-17 21:56:03.326 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-17 21:56:03.342 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-17 21:56:03.373 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f966719]
2022-02-17 21:56:03.405 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-17 21:56:03.420 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-17 21:56:03.436 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-17 21:56:03.436 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-17 21:56:03.451 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-17 21:56:03.483 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-17 21:56:03.498 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-17 21:56:03.514 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-17 21:56:03.514 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-17 21:56:03.530 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-17 21:56:03.592 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-17 21:56:03.608 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-17 21:56:03.701 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:56:03.701 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:56:03.733 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-17 21:56:03.733 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.13\spring-context-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.13\spring-aop-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.13\spring-beans-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.13\spring-expression-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.13\spring-core-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.13\spring-jcl-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.13\spring-tx-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.13\spring-orm-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.13\spring-jdbc-5.3.13.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1716e8c5, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-17 21:56:03.748 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-17 21:56:03.748 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-17 21:56:03.748 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b306b9f]
2022-02-17 21:56:03.826 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-17 21:56:03.826 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-17 21:56:04.170 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-17 21:56:04.201 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c067c0d]
2022-02-17 21:56:04.201 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-17 21:56:04.201 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-17 21:56:04.217 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-17 21:56:04.233 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-17 21:56:04.233 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-17 21:56:04.279 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-17 21:56:04.279 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@67d32a54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:56:04.295 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-17 21:56:04.295 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66fb45e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-17 21:56:04.311 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-17 21:56:04.311 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-17 21:56:04.326 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:56:04.326 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-17 21:56:04.326 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-17 21:56:04.326 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-17 21:56:04.326 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-17 21:56:04.342 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@553da911
2022-02-17 21:56:04.342 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 5f643323-f26c-4419-ac87-0454f8f4f2c2 (<unnamed>)
2022-02-17 21:56:04.342 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-17 21:56:04.404 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 01:41:07.462 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3c7f66c4
2022-02-18 01:41:07.845 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 01:41:08.058 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 01:41:08.289 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 01:41:08.292 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 01:41:08.294 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 01:41:08.312 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 01:41:08.330 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 01:41:08.337 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 01:41:08.359 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 01:41:08.472 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 01:41:08.476 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 01:41:09.019 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 01:41:09.045 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 01:41:09.047 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 01:41:09.079 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 01:41:09.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 01:41:09.327 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 01:41:09.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 01:41:09.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23aae55
2022-02-18 01:41:09.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d83c5a5
2022-02-18 01:41:09.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53bf7094
2022-02-18 01:41:09.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 01:41:09.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 01:41:09.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 01:41:09.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 01:41:09.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 01:41:09.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 01:41:09.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 01:41:09.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 01:41:09.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 01:41:09.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@125c082e
2022-02-18 01:41:09.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@125c082e
2022-02-18 01:41:09.350 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@125c082e
2022-02-18 01:41:09.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@341a8659
2022-02-18 01:41:09.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@341a8659
2022-02-18 01:41:09.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@341a8659
2022-02-18 01:41:09.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 01:41:09.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 01:41:09.359 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 01:41:09.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 01:41:09.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 01:41:09.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 01:41:09.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55b62629
2022-02-18 01:41:09.364 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55b62629
2022-02-18 01:41:09.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@867ba60
2022-02-18 01:41:09.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@867ba60
2022-02-18 01:41:09.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@456abb66
2022-02-18 01:41:09.370 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@456abb66
2022-02-18 01:41:09.374 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31be6b49
2022-02-18 01:41:09.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42561fba
2022-02-18 01:41:09.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@13cda7c9
2022-02-18 01:41:09.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@13cda7c9
2022-02-18 01:41:09.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6826c41e
2022-02-18 01:41:09.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6826c41e
2022-02-18 01:41:09.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@71154f21
2022-02-18 01:41:09.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71154f21
2022-02-18 01:41:09.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aa3d36
2022-02-18 01:41:09.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aa3d36
2022-02-18 01:41:09.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@240139e1
2022-02-18 01:41:09.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@240139e1
2022-02-18 01:41:09.408 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@109f5dd8
2022-02-18 01:41:09.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@109f5dd8
2022-02-18 01:41:09.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49d98dc5
2022-02-18 01:41:09.415 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49d98dc5
2022-02-18 01:41:09.419 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1654a892
2022-02-18 01:41:09.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1654a892
2022-02-18 01:41:09.426 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e8a459
2022-02-18 01:41:09.427 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e8a459
2022-02-18 01:41:09.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@2c383e33
2022-02-18 01:41:09.431 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c383e33
2022-02-18 01:41:09.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@d4602a
2022-02-18 01:41:09.435 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d4602a
2022-02-18 01:41:09.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 01:41:09.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 01:41:09.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 01:41:09.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73d6d0c
2022-02-18 01:41:09.449 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 01:41:09.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 01:41:09.450 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 01:41:09.451 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@673bb956
2022-02-18 01:41:09.453 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d0332e1
2022-02-18 01:41:09.455 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@1761de10
2022-02-18 01:41:09.457 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1761de10
2022-02-18 01:41:09.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1532c619
2022-02-18 01:41:09.461 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1532c619
2022-02-18 01:41:09.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@778ca8ef
2022-02-18 01:41:09.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@778ca8ef
2022-02-18 01:41:09.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@435ce306
2022-02-18 01:41:09.467 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@435ce306
2022-02-18 01:41:09.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75699e35
2022-02-18 01:41:09.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75699e35
2022-02-18 01:41:09.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f14f20c
2022-02-18 01:41:09.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 01:41:09.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 01:41:09.474 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 01:41:09.476 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 01:41:09.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 01:41:09.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 01:41:09.479 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@60c16548
2022-02-18 01:41:09.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@5339bbad
2022-02-18 01:41:09.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 01:41:09.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 01:41:09.483 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 01:41:09.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 01:41:09.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 01:41:09.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 01:41:09.487 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@36453307
2022-02-18 01:41:09.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@75504cef
2022-02-18 01:41:09.493 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3e598df9
2022-02-18 01:41:09.494 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e598df9
2022-02-18 01:41:09.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@42cc13a0
2022-02-18 01:41:09.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@25cc7470
2022-02-18 01:41:09.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25cc7470
2022-02-18 01:41:09.501 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@78dc4696
2022-02-18 01:41:09.502 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@78dc4696
2022-02-18 01:41:09.503 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@55120f99
2022-02-18 01:41:09.504 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@323659f8
2022-02-18 01:41:09.507 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7b22ec89
2022-02-18 01:41:09.512 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@3e58d65e
2022-02-18 01:41:09.513 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e58d65e
2022-02-18 01:41:09.514 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61942c1
2022-02-18 01:41:09.515 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f63c44f
2022-02-18 01:41:09.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@408a247c
2022-02-18 01:41:09.516 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62a8fd44
2022-02-18 01:41:09.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e6ba49a
2022-02-18 01:41:09.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f5b5ca4
2022-02-18 01:41:09.517 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ee33af7
2022-02-18 01:41:09.518 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b04acb2
2022-02-18 01:41:09.540 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1efdcd5] into BootstrapContext; was [null]
2022-02-18 01:41:09.540 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1623bbe5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7af1cd63]
2022-02-18 01:41:09.693 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 01:41:09.694 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 01:41:09.718 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 01:41:09.719 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 01:41:09.723 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 01:41:09.723 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 01:41:09.725 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 01:41:09.727 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 01:41:09.729 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 01:41:09.731 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 01:41:09.733 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 01:41:09.734 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 01:41:09.735 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 01:41:09.736 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 01:41:09.736 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 01:41:09.739 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 01:41:09.747 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 01:41:09.759 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 01:41:09.760 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 01:41:09.760 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 01:41:09.766 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 01:41:09.766 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 01:41:09.997 WARN [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:133)] - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:10) [classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) [?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) [?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) [?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) [spring-context-5.3.15.jar:5.3.15]
	at cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:12) [classes/:?]
2022-02-18 01:41:10.095 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 01:41:10.170 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 01:41:10.183 DEBUG [main][org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl] [makeLobCreatorBuilder] [org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:65)] - HHH000422: Disabling contextual LOB creation as connection was null
2022-02-18 01:41:10.186 DEBUG [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:126)] - Error calling Driver#connect [null]
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:10) [classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) [?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) [?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) [?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) [spring-context-5.3.15.jar:5.3.15]
	at cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:12) [classes/:?]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) ~[?:?]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:953) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	... 68 more
Caused by: java.net.ConnectException: Connection refused: connect
	at sun.nio.ch.Net.connect0(Native Method) ~[?:?]
	at sun.nio.ch.Net.connect(Net.java:579) ~[?:?]
	at sun.nio.ch.Net.connect(Net.java:568) ~[?:?]
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[?:?]
	at java.net.Socket.connect(Socket.java:633) ~[?:?]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:953) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	... 68 more
2022-02-18 01:41:10.196 WARN [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:137)] - SQL Error: 0, SQLState: 08S01
2022-02-18 01:41:10.197 ERROR [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:142)] - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2022-02-18 01:41:10.199 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2022-02-18 01:46:18.029 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6fd83fc1
2022-02-18 01:46:18.218 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 01:46:18.377 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 01:46:18.555 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 01:46:18.556 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 01:46:18.557 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 01:46:18.571 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 01:46:18.584 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 01:46:18.588 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 01:46:18.600 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 01:46:18.697 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 01:46:18.699 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 01:46:19.026 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 01:46:19.049 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 01:46:19.050 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 01:46:19.073 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 01:46:19.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@721eb7df
2022-02-18 01:46:19.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@721eb7df
2022-02-18 01:46:19.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@721eb7df
2022-02-18 01:46:19.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@553f3b6e
2022-02-18 01:46:19.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@76f10035
2022-02-18 01:46:19.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@6bb7cce7
2022-02-18 01:46:19.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18ca3c62
2022-02-18 01:46:19.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18ca3c62
2022-02-18 01:46:19.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18ca3c62
2022-02-18 01:46:19.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@50b1f030
2022-02-18 01:46:19.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@50b1f030
2022-02-18 01:46:19.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@50b1f030
2022-02-18 01:46:19.256 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@680bddf5
2022-02-18 01:46:19.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@680bddf5
2022-02-18 01:46:19.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@680bddf5
2022-02-18 01:46:19.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@26f1249d
2022-02-18 01:46:19.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@26f1249d
2022-02-18 01:46:19.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@26f1249d
2022-02-18 01:46:19.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@18151a14
2022-02-18 01:46:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@18151a14
2022-02-18 01:46:19.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@18151a14
2022-02-18 01:46:19.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56bc3fac
2022-02-18 01:46:19.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@56bc3fac
2022-02-18 01:46:19.267 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@56bc3fac
2022-02-18 01:46:19.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@3ecedf21
2022-02-18 01:46:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@3ecedf21
2022-02-18 01:46:19.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@3ecedf21
2022-02-18 01:46:19.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@125c082e
2022-02-18 01:46:19.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@125c082e
2022-02-18 01:46:19.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@341a8659
2022-02-18 01:46:19.276 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@341a8659
2022-02-18 01:46:19.278 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@7f4d9395
2022-02-18 01:46:19.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@7f4d9395
2022-02-18 01:46:19.280 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79c5636f
2022-02-18 01:46:19.282 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@757f675c
2022-02-18 01:46:19.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@a53bb6f
2022-02-18 01:46:19.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@a53bb6f
2022-02-18 01:46:19.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@5ba745bc
2022-02-18 01:46:19.292 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@5ba745bc
2022-02-18 01:46:19.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@42561fba
2022-02-18 01:46:19.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@42561fba
2022-02-18 01:46:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@13cda7c9
2022-02-18 01:46:19.309 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@13cda7c9
2022-02-18 01:46:19.312 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6826c41e
2022-02-18 01:46:19.313 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6826c41e
2022-02-18 01:46:19.316 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d691f3d
2022-02-18 01:46:19.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d691f3d
2022-02-18 01:46:19.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71154f21
2022-02-18 01:46:19.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@71154f21
2022-02-18 01:46:19.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4aa3d36
2022-02-18 01:46:19.326 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4aa3d36
2022-02-18 01:46:19.329 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240139e1
2022-02-18 01:46:19.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@240139e1
2022-02-18 01:46:19.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@57f64f5e
2022-02-18 01:46:19.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@57f64f5e
2022-02-18 01:46:19.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@22d6cac2
2022-02-18 01:46:19.337 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@22d6cac2
2022-02-18 01:46:19.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@6974a715
2022-02-18 01:46:19.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6974a715
2022-02-18 01:46:19.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6974a715
2022-02-18 01:46:19.345 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@9ec531
2022-02-18 01:46:19.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@2c383e33
2022-02-18 01:46:19.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@2c383e33
2022-02-18 01:46:19.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@2c383e33
2022-02-18 01:46:19.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3af37506
2022-02-18 01:46:19.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@36a7abe1
2022-02-18 01:46:19.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@4604b900
2022-02-18 01:46:19.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@4604b900
2022-02-18 01:46:19.357 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@3956b302
2022-02-18 01:46:19.358 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3956b302
2022-02-18 01:46:19.360 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@673bb956
2022-02-18 01:46:19.361 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@673bb956
2022-02-18 01:46:19.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@7d0332e1
2022-02-18 01:46:19.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@7d0332e1
2022-02-18 01:46:19.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1761de10
2022-02-18 01:46:19.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1761de10
2022-02-18 01:46:19.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@42d236fb
2022-02-18 01:46:19.368 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@7de4a01f
2022-02-18 01:46:19.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@7de4a01f
2022-02-18 01:46:19.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@7de4a01f
2022-02-18 01:46:19.372 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@60e9df3c
2022-02-18 01:46:19.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@60e9df3c
2022-02-18 01:46:19.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@60e9df3c
2022-02-18 01:46:19.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@65e7f52a
2022-02-18 01:46:19.376 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@4aeaadc1
2022-02-18 01:46:19.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@78f9ed3e
2022-02-18 01:46:19.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@78f9ed3e
2022-02-18 01:46:19.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@78f9ed3e
2022-02-18 01:46:19.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@110844f6
2022-02-18 01:46:19.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@110844f6
2022-02-18 01:46:19.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@110844f6
2022-02-18 01:46:19.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@1ad926d3
2022-02-18 01:46:19.382 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@c96a4ea
2022-02-18 01:46:19.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@452c8a40
2022-02-18 01:46:19.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@452c8a40
2022-02-18 01:46:19.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@66d57c1b
2022-02-18 01:46:19.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@36453307
2022-02-18 01:46:19.389 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@36453307
2022-02-18 01:46:19.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@7f9e1534
2022-02-18 01:46:19.392 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7f9e1534
2022-02-18 01:46:19.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@3e598df9
2022-02-18 01:46:19.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@42cc13a0
2022-02-18 01:46:19.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@25cc7470
2022-02-18 01:46:19.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@3e521715
2022-02-18 01:46:19.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e521715
2022-02-18 01:46:19.401 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3cc20577
2022-02-18 01:46:19.402 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@33a630fa
2022-02-18 01:46:19.402 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@775594f2
2022-02-18 01:46:19.402 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@5767b2af
2022-02-18 01:46:19.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@7b22ec89
2022-02-18 01:46:19.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@790132f7
2022-02-18 01:46:19.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@2228db21
2022-02-18 01:46:19.404 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@48b0e701
2022-02-18 01:46:19.428 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6ea94d6a] into BootstrapContext; was [null]
2022-02-18 01:46:19.428 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@28486680] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4d7e7435]
2022-02-18 01:46:19.518 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 01:46:19.519 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 01:46:19.537 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 01:46:19.539 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 01:46:19.540 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 01:46:19.541 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 01:46:19.542 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 01:46:19.544 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 01:46:19.545 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 01:46:19.546 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 01:46:19.548 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 01:46:19.549 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 01:46:19.550 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 01:46:19.550 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 01:46:19.551 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 01:46:19.553 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 01:46:19.567 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 01:46:19.581 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 01:46:19.581 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 01:46:19.582 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 01:46:19.586 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 01:46:19.586 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 01:46:19.747 WARN [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:133)] - HHH000342: Could not obtain connection to query metadata
java.lang.IllegalStateException: Cannot get a connection as the driver manager is not properly initialized
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.getConnection(DriverManagerConnectionProviderImpl.java:172) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess.obtainConnection(JdbcEnvironmentInitiator.java:181) ~[hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:68) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.internal.JdbcServicesImpl.configure(JdbcServicesImpl.java:51) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.convertSqlException(BasicConnectionCreator.java:116) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:41) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:10) [classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) [?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) [?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) [?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) [spring-context-5.3.15.jar:5.3.15]
	at cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:12) [classes/:?]
2022-02-18 01:46:19.815 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 01:46:19.841 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 01:46:19.850 DEBUG [main][org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl] [makeLobCreatorBuilder] [org.hibernate.engine.jdbc.env.internal.LobCreatorBuilderImpl.makeLobCreatorBuilder(LobCreatorBuilderImpl.java:65)] - HHH000422: Disabling contextual LOB creation as connection was null
2022-02-18 01:46:19.852 DEBUG [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:126)] - Error calling Driver#connect [null]
com.mysql.cj.jdbc.exceptions.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at com.mysql.cj.jdbc.exceptions.SQLError.createCommunicationsException(SQLError.java:174) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:64) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:833) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:453) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:246) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:198) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at org.hibernate.engine.jdbc.connections.internal.DriverConnectionCreator.makeConnection(DriverConnectionCreator.java:38) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.BasicConnectionCreator.createConnection(BasicConnectionCreator.java:58) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.addConnections(DriverManagerConnectionProviderImpl.java:409) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:275) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:249) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections$Builder.build(DriverManagerConnectionProviderImpl.java:453) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildPool(DriverManagerConnectionProviderImpl.java:98) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:73) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.configureService(StandardServiceRegistryImpl.java:107) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:246) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.buildJdbcConnectionAccess(JdbcEnvironmentInitiator.java:146) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:66) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:35) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.registry.internal.StandardServiceRegistryImpl.initiateService(StandardServiceRegistryImpl.java:101) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.createService(AbstractServiceRegistryImpl.java:263) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:237) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.injectServices(DefaultIdentifierGeneratorFactory.java:175) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.injectDependencies(AbstractServiceRegistryImpl.java:286) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.initializeService(AbstractServiceRegistryImpl.java:243) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.service.internal.AbstractServiceRegistryImpl.getService(AbstractServiceRegistryImpl.java:214) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.internal.InFlightMetadataCollectorImpl.<init>(InFlightMetadataCollectorImpl.java:173) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:127) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1460) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1494) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:56) [hibernate-core-5.6.5.Final.jar:5.6.5.Final]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:79) [javax.persistence-api-2.2.jar:2.2]
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:54) [javax.persistence-api-2.2.jar:2.2]
	at cigma.pfe.dao.ClientDaoImpl.<init>(ClientDaoImpl.java:10) [classes/:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) [?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) [?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) [?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) [?:?]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:87) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateBean(AbstractAutowireCapableBeanFactory.java:1326) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1232) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveReference(BeanDefinitionValueResolver.java:330) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.BeanDefinitionValueResolver.resolveValueIfNecessary(BeanDefinitionValueResolver.java:113) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveConstructorArguments(ConstructorResolver.java:707) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:198) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:353) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) [spring-beans-5.3.15.jar:5.3.15]
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1154) [spring-context-5.3.15.jar:5.3.15]
	at cigma.pfe.ApplicationRunner.main(ApplicationRunner.java:12) [classes/:?]
Caused by: com.mysql.cj.exceptions.CJCommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:?]
	at jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77) ~[?:?]
	at jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:?]
	at java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499) ~[?:?]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:480) ~[?:?]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:61) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:105) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createException(ExceptionFactory.java:151) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.exceptions.ExceptionFactory.createCommunicationsException(ExceptionFactory.java:167) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:89) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:953) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	... 68 more
Caused by: java.net.ConnectException: Connection refused: connect
	at sun.nio.ch.Net.connect0(Native Method) ~[?:?]
	at sun.nio.ch.Net.connect(Net.java:579) ~[?:?]
	at sun.nio.ch.Net.connect(Net.java:568) ~[?:?]
	at sun.nio.ch.NioSocketImpl.connect(NioSocketImpl.java:588) ~[?:?]
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:327) ~[?:?]
	at java.net.Socket.connect(Socket.java:633) ~[?:?]
	at com.mysql.cj.protocol.StandardSocketFactory.connect(StandardSocketFactory.java:155) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.protocol.a.NativeSocketConnection.connect(NativeSocketConnection.java:63) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.NativeSession.connect(NativeSession.java:144) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:953) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	at com.mysql.cj.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:823) ~[mysql-connector-java-8.0.25.jar:8.0.25]
	... 68 more
2022-02-18 01:46:19.858 WARN [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:137)] - SQL Error: 0, SQLState: 08S01
2022-02-18 01:46:19.859 ERROR [main][org.hibernate.engine.jdbc.spi.SqlExceptionHelper] [logExceptions] [org.hibernate.engine.jdbc.spi.SqlExceptionHelper.logExceptions(SqlExceptionHelper.java:142)] - Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2022-02-18 01:46:19.860 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
2022-02-18 17:56:38.451 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@bae7dc0
2022-02-18 17:56:38.726 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 17:56:38.881 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 17:56:39.198 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 17:56:39.200 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 17:56:39.202 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 17:56:39.220 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 17:56:39.234 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 17:56:39.241 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 17:56:39.256 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 17:56:39.378 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 17:56:39.387 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 17:56:39.923 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 17:56:39.947 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 17:56:39.950 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 17:56:39.997 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 17:56:40.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 17:56:40.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 17:56:40.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 17:56:40.232 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4e406694
2022-02-18 17:56:40.233 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b50150
2022-02-18 17:56:40.234 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b530eb9
2022-02-18 17:56:40.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 17:56:40.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 17:56:40.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 17:56:40.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 17:56:40.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 17:56:40.242 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 17:56:40.243 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 17:56:40.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 17:56:40.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 17:56:40.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@a68df9
2022-02-18 17:56:40.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@a68df9
2022-02-18 17:56:40.248 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a68df9
2022-02-18 17:56:40.250 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@169da7f2
2022-02-18 17:56:40.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@169da7f2
2022-02-18 17:56:40.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@169da7f2
2022-02-18 17:56:40.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 17:56:40.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 17:56:40.254 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 17:56:40.256 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 17:56:40.256 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 17:56:40.257 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 17:56:40.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68ace111
2022-02-18 17:56:40.259 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68ace111
2022-02-18 17:56:40.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5eefa415
2022-02-18 17:56:40.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5eefa415
2022-02-18 17:56:40.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@344b8190
2022-02-18 17:56:40.264 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@344b8190
2022-02-18 17:56:40.266 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@718607eb
2022-02-18 17:56:40.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@676f0a60
2022-02-18 17:56:40.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@6759f091
2022-02-18 17:56:40.284 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6759f091
2022-02-18 17:56:40.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@55b5e331
2022-02-18 17:56:40.288 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@55b5e331
2022-02-18 17:56:40.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@46b695ec
2022-02-18 17:56:40.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@46b695ec
2022-02-18 17:56:40.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3af9aa66
2022-02-18 17:56:40.300 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3af9aa66
2022-02-18 17:56:40.301 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64d43929
2022-02-18 17:56:40.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64d43929
2022-02-18 17:56:40.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e7f2e0f
2022-02-18 17:56:40.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e7f2e0f
2022-02-18 17:56:40.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2516fc68
2022-02-18 17:56:40.308 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2516fc68
2022-02-18 17:56:40.310 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@347bdeef
2022-02-18 17:56:40.311 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@347bdeef
2022-02-18 17:56:40.314 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49298ce7
2022-02-18 17:56:40.315 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49298ce7
2022-02-18 17:56:40.317 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@194152cf
2022-02-18 17:56:40.318 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194152cf
2022-02-18 17:56:40.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@1654a892
2022-02-18 17:56:40.321 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1654a892
2022-02-18 17:56:40.324 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 17:56:40.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 17:56:40.325 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 17:56:40.328 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@210f0cc1
2022-02-18 17:56:40.330 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 17:56:40.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 17:56:40.331 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 17:56:40.333 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c0da600
2022-02-18 17:56:40.334 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@e044b4a
2022-02-18 17:56:40.336 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@e36bb2a
2022-02-18 17:56:40.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e36bb2a
2022-02-18 17:56:40.339 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1fd386c3
2022-02-18 17:56:40.340 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fd386c3
2022-02-18 17:56:40.342 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60e949e1
2022-02-18 17:56:40.343 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60e949e1
2022-02-18 17:56:40.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@c827db
2022-02-18 17:56:40.344 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c827db
2022-02-18 17:56:40.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@654c1a54
2022-02-18 17:56:40.346 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@654c1a54
2022-02-18 17:56:40.347 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@19f21b6b
2022-02-18 17:56:40.348 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 17:56:40.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 17:56:40.349 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 17:56:40.351 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 17:56:40.352 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 17:56:40.353 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 17:56:40.362 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@75699e35
2022-02-18 17:56:40.363 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@1f14f20c
2022-02-18 17:56:40.365 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 17:56:40.366 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 17:56:40.367 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 17:56:40.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 17:56:40.371 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 17:56:40.372 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 17:56:40.373 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@39ce27f2
2022-02-18 17:56:40.375 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@60c16548
2022-02-18 17:56:40.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@29006752
2022-02-18 17:56:40.379 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29006752
2022-02-18 17:56:40.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d59970a
2022-02-18 17:56:40.383 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@66eb985d
2022-02-18 17:56:40.383 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@66eb985d
2022-02-18 17:56:40.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@81ff872
2022-02-18 17:56:40.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@81ff872
2022-02-18 17:56:40.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@99a65d3
2022-02-18 17:56:40.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6813a331
2022-02-18 17:56:40.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@79b663b3
2022-02-18 17:56:40.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@265c5d69
2022-02-18 17:56:40.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@265c5d69
2022-02-18 17:56:40.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@775594f2
2022-02-18 17:56:40.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5767b2af
2022-02-18 17:56:40.397 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b22ec89
2022-02-18 17:56:40.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@790132f7
2022-02-18 17:56:40.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2228db21
2022-02-18 17:56:40.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@48b0e701
2022-02-18 17:56:40.399 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@241a0c3a
2022-02-18 17:56:40.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@547c04c4
2022-02-18 17:56:40.416 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4d7e7435] into BootstrapContext; was [null]
2022-02-18 17:56:40.416 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a1e3ac1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6e78fcf5]
2022-02-18 17:56:40.543 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 17:56:40.544 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 17:56:40.569 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 17:56:40.572 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 17:56:40.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 17:56:40.573 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 17:56:40.574 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 17:56:40.576 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 17:56:40.577 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 17:56:40.579 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 17:56:40.581 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 17:56:40.583 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 17:56:40.585 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 17:56:40.586 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 17:56:40.588 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 17:56:40.590 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 17:56:40.599 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 17:56:40.613 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 17:56:40.614 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 17:56:40.615 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 17:56:40.621 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 17:56:40.622 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 17:56:40.922 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-18 17:56:40.923 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-18 17:56:40.924 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-18 17:56:40.946 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 17:56:40.972 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-18 17:56:40.974 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 17:56:41.008 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1b9c3d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@69e05f61]
2022-02-18 17:56:41.057 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-18 17:56:41.074 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-18 17:56:41.096 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-18 17:56:41.102 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-18 17:56:41.108 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-18 17:56:41.141 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-18 17:56:41.146 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 17:56:41.147 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 17:56:41.148 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-18 17:56:41.154 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-18 17:56:41.159 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-18 17:56:41.173 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-18 17:56:41.178 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-18 17:56:41.179 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-18 17:56:41.180 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-18 17:56:41.180 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-18 17:56:41.182 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-18 17:56:41.183 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-18 17:56:41.206 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-18 17:56:41.207 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-18 17:56:41.211 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-18 17:56:41.328 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-18 17:56:41.330 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-18 17:56:41.331 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-18 17:56:41.331 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-18 17:56:41.332 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-18 17:56:41.332 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-18 17:56:41.333 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-18 17:56:41.333 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-18 17:56:41.333 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-18 17:56:41.334 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-18 17:56:41.336 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-18 17:56:41.337 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-18 17:56:41.337 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-18 17:56:41.338 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-18 17:56:41.338 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-18 17:56:41.339 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-18 17:56:41.339 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-18 17:56:41.340 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-18 17:56:41.340 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-18 17:56:41.341 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-18 17:56:41.342 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-18 17:56:41.343 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-18 17:56:41.343 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-18 17:56:41.344 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-18 17:56:41.344 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-18 17:56:41.345 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-18 17:56:41.345 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-18 17:56:41.345 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-18 17:56:41.346 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-18 17:56:41.346 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-18 17:56:41.347 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-18 17:56:41.347 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-18 17:56:41.348 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-18 17:56:41.348 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-18 17:56:41.349 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-18 17:56:41.349 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-18 17:56:41.350 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-18 17:56:41.350 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-18 17:56:41.350 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-18 17:56:41.513 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 17:56:41.516 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 17:56:41.551 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-18 17:56:41.551 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.15\spring-context-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.15\spring-aop-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.15\spring-beans-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.15\spring-expression-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.15\spring-core-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.15\spring-jcl-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.15\spring-tx-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.15\spring-orm-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.15\spring-jdbc-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3d4e405e, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-18 17:56:41.568 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-18 17:56:41.571 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-18 17:56:41.571 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1b9c3d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f84acf7]
2022-02-18 17:56:41.640 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 17:56:41.640 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 17:56:41.957 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-18 17:56:41.957 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-18 17:56:41.958 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-18 17:56:41.958 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-18 17:56:41.958 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-18 17:56:41.958 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-18 17:56:41.959 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-18 17:56:41.994 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cedee22]
2022-02-18 17:56:41.996 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-18 17:56:41.997 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-18 17:56:42.016 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-18 17:56:42.023 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-18 17:56:42.026 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-18 17:56:42.088 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-18 17:56:42.092 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6707a4bf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 17:56:42.167 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-18 17:56:42.169 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@217c23ce] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 17:56:42.187 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-18 17:56:42.188 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-18 17:56:42.200 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 17:56:42.201 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 17:56:42.205 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-18 17:56:42.207 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-18 17:56:42.214 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 17:56:42.230 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ccfdaef
2022-02-18 17:56:42.233 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: b23e2e58-70e8-4bd6-872e-a339d3ccd11e (<unnamed>)
2022-02-18 17:56:42.234 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-18 17:56:42.344 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 18:25:01.032 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3c7f66c4
2022-02-18 18:25:01.392 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 18:25:01.669 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 18:25:01.849 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 18:25:01.850 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 18:25:01.851 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 18:25:01.864 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 18:25:01.884 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 18:25:01.895 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 18:25:01.907 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 18:25:02.089 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 18:25:02.092 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 18:25:02.592 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 18:25:02.623 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 18:25:02.625 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 18:25:02.666 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 18:25:02.948 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 18:25:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 18:25:02.949 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4163f1cd
2022-02-18 18:25:02.951 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@23aae55
2022-02-18 18:25:02.953 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2d83c5a5
2022-02-18 18:25:02.955 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@53bf7094
2022-02-18 18:25:02.958 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 18:25:02.958 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 18:25:02.959 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@18151a14
2022-02-18 18:25:02.962 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 18:25:02.963 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 18:25:02.964 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@56bc3fac
2022-02-18 18:25:02.967 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 18:25:02.968 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 18:25:02.969 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3ecedf21
2022-02-18 18:25:02.971 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@125c082e
2022-02-18 18:25:02.972 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@125c082e
2022-02-18 18:25:02.973 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@125c082e
2022-02-18 18:25:02.975 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@341a8659
2022-02-18 18:25:02.976 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@341a8659
2022-02-18 18:25:02.977 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@341a8659
2022-02-18 18:25:02.980 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 18:25:02.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 18:25:02.981 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7f4d9395
2022-02-18 18:25:02.984 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 18:25:02.986 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 18:25:02.987 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@27f3b6d6
2022-02-18 18:25:02.990 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@55b62629
2022-02-18 18:25:02.991 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@55b62629
2022-02-18 18:25:02.994 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@867ba60
2022-02-18 18:25:02.995 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@867ba60
2022-02-18 18:25:02.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@456abb66
2022-02-18 18:25:02.998 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@456abb66
2022-02-18 18:25:03.000 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@31be6b49
2022-02-18 18:25:03.002 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@42561fba
2022-02-18 18:25:03.004 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@13cda7c9
2022-02-18 18:25:03.005 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@13cda7c9
2022-02-18 18:25:03.007 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@6826c41e
2022-02-18 18:25:03.008 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6826c41e
2022-02-18 18:25:03.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@71154f21
2022-02-18 18:25:03.015 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@71154f21
2022-02-18 18:25:03.018 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aa3d36
2022-02-18 18:25:03.019 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@4aa3d36
2022-02-18 18:25:03.021 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@240139e1
2022-02-18 18:25:03.022 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@240139e1
2022-02-18 18:25:03.024 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@109f5dd8
2022-02-18 18:25:03.025 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@109f5dd8
2022-02-18 18:25:03.028 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49d98dc5
2022-02-18 18:25:03.029 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@49d98dc5
2022-02-18 18:25:03.032 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1654a892
2022-02-18 18:25:03.033 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1654a892
2022-02-18 18:25:03.037 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e8a459
2022-02-18 18:25:03.038 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@5e8a459
2022-02-18 18:25:03.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@2c383e33
2022-02-18 18:25:03.041 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@2c383e33
2022-02-18 18:25:03.044 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@d4602a
2022-02-18 18:25:03.045 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@d4602a
2022-02-18 18:25:03.048 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 18:25:03.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 18:25:03.049 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1adb7478
2022-02-18 18:25:03.053 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@73d6d0c
2022-02-18 18:25:03.056 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 18:25:03.057 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 18:25:03.058 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1fd386c3
2022-02-18 18:25:03.061 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@673bb956
2022-02-18 18:25:03.063 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7d0332e1
2022-02-18 18:25:03.071 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@1761de10
2022-02-18 18:25:03.071 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1761de10
2022-02-18 18:25:03.074 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1532c619
2022-02-18 18:25:03.075 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1532c619
2022-02-18 18:25:03.077 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@778ca8ef
2022-02-18 18:25:03.078 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@778ca8ef
2022-02-18 18:25:03.082 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@435ce306
2022-02-18 18:25:03.083 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@435ce306
2022-02-18 18:25:03.085 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@75699e35
2022-02-18 18:25:03.086 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@75699e35
2022-02-18 18:25:03.087 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1f14f20c
2022-02-18 18:25:03.090 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 18:25:03.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 18:25:03.091 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@48e7b3d2
2022-02-18 18:25:03.093 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 18:25:03.094 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 18:25:03.095 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4925f4f5
2022-02-18 18:25:03.099 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@60c16548
2022-02-18 18:25:03.100 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@5339bbad
2022-02-18 18:25:03.104 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 18:25:03.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 18:25:03.105 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@470a9030
2022-02-18 18:25:03.108 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 18:25:03.109 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 18:25:03.111 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@7fcff1b9
2022-02-18 18:25:03.112 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@36453307
2022-02-18 18:25:03.114 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@75504cef
2022-02-18 18:25:03.117 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@3e598df9
2022-02-18 18:25:03.119 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3e598df9
2022-02-18 18:25:03.120 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@42cc13a0
2022-02-18 18:25:03.122 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@25cc7470
2022-02-18 18:25:03.123 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@25cc7470
2022-02-18 18:25:03.126 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@78dc4696
2022-02-18 18:25:03.128 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@78dc4696
2022-02-18 18:25:03.129 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@55120f99
2022-02-18 18:25:03.130 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@323659f8
2022-02-18 18:25:03.133 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@7b22ec89
2022-02-18 18:25:03.138 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@3e58d65e
2022-02-18 18:25:03.139 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3e58d65e
2022-02-18 18:25:03.140 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@61942c1
2022-02-18 18:25:03.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6f63c44f
2022-02-18 18:25:03.141 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@408a247c
2022-02-18 18:25:03.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@62a8fd44
2022-02-18 18:25:03.142 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2e6ba49a
2022-02-18 18:25:03.143 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5f5b5ca4
2022-02-18 18:25:03.143 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4ee33af7
2022-02-18 18:25:03.144 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@6b04acb2
2022-02-18 18:25:03.183 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1efdcd5] into BootstrapContext; was [null]
2022-02-18 18:25:03.184 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@1623bbe5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@7af1cd63]
2022-02-18 18:25:03.426 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 18:25:03.427 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 18:25:03.459 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 18:25:03.464 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 18:25:03.466 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 18:25:03.467 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 18:25:03.474 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 18:25:03.477 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 18:25:03.479 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 18:25:03.484 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 18:25:03.487 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 18:25:03.488 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 18:25:03.489 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 18:25:03.490 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 18:25:03.491 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 18:25:03.493 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 18:25:03.504 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 18:25:03.519 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 18:25:03.520 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 18:25:03.520 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 18:25:03.526 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 18:25:03.527 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 18:25:04.249 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-18 18:25:04.249 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-18 18:25:04.250 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-18 18:25:04.291 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 18:25:04.330 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-18 18:25:04.332 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 18:25:04.364 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3491e86e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@68f32020]
2022-02-18 18:25:04.423 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-18 18:25:04.456 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-18 18:25:04.495 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-18 18:25:04.514 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-18 18:25:04.531 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-18 18:25:04.587 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-18 18:25:04.592 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 18:25:04.592 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 18:25:04.593 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-18 18:25:04.596 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-18 18:25:04.599 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-18 18:25:04.603 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-18 18:25:04.609 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-18 18:25:04.610 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-18 18:25:04.611 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-18 18:25:04.611 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-18 18:25:04.611 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-18 18:25:04.612 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-18 18:25:04.624 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-18 18:25:04.625 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-18 18:25:04.627 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-18 18:25:04.717 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-18 18:25:04.721 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-18 18:25:04.722 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-18 18:25:04.722 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-18 18:25:04.722 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-18 18:25:04.723 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-18 18:25:04.724 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-18 18:25:04.725 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-18 18:25:04.725 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-18 18:25:04.728 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-18 18:25:04.732 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-18 18:25:04.781 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-18 18:25:04.781 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-18 18:25:04.782 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-18 18:25:04.782 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-18 18:25:04.782 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-18 18:25:04.783 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-18 18:25:04.783 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-18 18:25:04.783 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-18 18:25:04.786 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-18 18:25:04.788 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-18 18:25:04.789 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-18 18:25:04.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-18 18:25:04.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-18 18:25:04.790 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-18 18:25:04.791 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-18 18:25:04.791 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-18 18:25:04.792 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-18 18:25:04.795 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-18 18:25:04.797 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-18 18:25:04.797 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-18 18:25:04.798 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-18 18:25:04.800 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-18 18:25:04.805 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-18 18:25:04.809 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-18 18:25:04.810 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-18 18:25:04.810 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-18 18:25:04.811 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-18 18:25:04.812 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-18 18:25:04.922 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:25:04.924 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:25:04.948 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-18 18:25:04.949 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.15\spring-context-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.15\spring-aop-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.15\spring-beans-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.15\spring-expression-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.15\spring-core-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.15\spring-jcl-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.15\spring-tx-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.15\spring-orm-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.15\spring-jdbc-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@350d3f4d, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-18 18:25:05.006 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-18 18:25:05.008 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-18 18:25:05.009 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3491e86e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@6ad16c5d]
2022-02-18 18:25:05.163 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 18:25:05.164 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 18:25:05.497 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-18 18:25:05.497 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-18 18:25:05.497 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-18 18:25:05.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-18 18:25:05.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-18 18:25:05.498 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-18 18:25:05.499 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-18 18:25:05.523 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b4825f0]
2022-02-18 18:25:05.524 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-18 18:25:05.525 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-18 18:25:05.538 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-18 18:25:05.541 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-18 18:25:05.544 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-18 18:25:05.585 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-18 18:25:05.588 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@62765aec] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 18:25:05.612 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-18 18:25:05.612 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@14c141c0] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 18:25:05.623 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-18 18:25:05.631 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-18 18:25:05.639 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 18:25:05.640 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 18:25:05.641 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-18 18:25:05.642 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-18 18:25:05.648 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:25:05.658 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@91da29b
2022-02-18 18:25:05.661 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 4259980c-7cdb-4ad1-84f0-46d6aca2ccc2 (<unnamed>)
2022-02-18 18:25:05.661 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-18 18:25:05.772 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 18:35:10.873 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de76cc7
2022-02-18 18:35:11.077 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 18:35:11.220 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 18:35:11.360 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 18:35:11.361 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 18:35:11.363 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 18:35:11.373 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 18:35:11.381 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 18:35:11.386 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 18:35:11.393 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 18:35:11.522 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 18:35:11.530 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 18:35:11.909 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 18:35:11.948 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 18:35:11.951 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 18:35:11.995 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 18:35:12.192 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-18 18:35:12.193 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-18 18:35:12.194 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6b530eb9
2022-02-18 18:35:12.195 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64a1923a
2022-02-18 18:35:12.196 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@44d70181
2022-02-18 18:35:12.197 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@88a8218
2022-02-18 18:35:12.199 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-18 18:35:12.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@680bddf5
2022-02-18 18:35:12.200 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@680bddf5
2022-02-18 18:35:12.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@26f1249d
2022-02-18 18:35:12.202 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@26f1249d
2022-02-18 18:35:12.203 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@26f1249d
2022-02-18 18:35:12.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-18 18:35:12.204 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@18151a14
2022-02-18 18:35:12.205 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@18151a14
2022-02-18 18:35:12.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-18 18:35:12.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@56bc3fac
2022-02-18 18:35:12.207 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@56bc3fac
2022-02-18 18:35:12.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-18 18:35:12.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@3ecedf21
2022-02-18 18:35:12.209 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@3ecedf21
2022-02-18 18:35:12.211 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-18 18:35:12.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@125c082e
2022-02-18 18:35:12.212 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@125c082e
2022-02-18 18:35:12.213 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-18 18:35:12.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@341a8659
2022-02-18 18:35:12.214 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@341a8659
2022-02-18 18:35:12.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-18 18:35:12.217 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@7f4d9395
2022-02-18 18:35:12.219 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-18 18:35:12.220 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@27f3b6d6
2022-02-18 18:35:12.222 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@55b62629
2022-02-18 18:35:12.223 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@55b62629
2022-02-18 18:35:12.224 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@33a053d
2022-02-18 18:35:12.226 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ba745bc
2022-02-18 18:35:12.228 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@2a3a299
2022-02-18 18:35:12.229 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@2a3a299
2022-02-18 18:35:12.230 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@42561fba
2022-02-18 18:35:12.231 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@42561fba
2022-02-18 18:35:12.235 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-18 18:35:12.236 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@6826c41e
2022-02-18 18:35:12.237 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-18 18:35:12.238 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2d691f3d
2022-02-18 18:35:12.239 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-18 18:35:12.240 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@71154f21
2022-02-18 18:35:12.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-18 18:35:12.241 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@4aa3d36
2022-02-18 18:35:12.244 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-18 18:35:12.245 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@240139e1
2022-02-18 18:35:12.246 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-18 18:35:12.247 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@109f5dd8
2022-02-18 18:35:12.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-18 18:35:12.249 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49d98dc5
2022-02-18 18:35:12.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@5f233b26
2022-02-18 18:35:12.251 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@5f233b26
2022-02-18 18:35:12.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@210f0cc1
2022-02-18 18:35:12.253 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@210f0cc1
2022-02-18 18:35:12.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-18 18:35:12.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@76304b46
2022-02-18 18:35:12.255 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@76304b46
2022-02-18 18:35:12.258 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4e6d7365
2022-02-18 18:35:12.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-18 18:35:12.260 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-18 18:35:12.261 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@e044b4a
2022-02-18 18:35:12.262 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@4604b900
2022-02-18 18:35:12.263 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3956b302
2022-02-18 18:35:12.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@673bb956
2022-02-18 18:35:12.265 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@673bb956
2022-02-18 18:35:12.268 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-18 18:35:12.269 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7d0332e1
2022-02-18 18:35:12.270 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-18 18:35:12.271 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@1761de10
2022-02-18 18:35:12.272 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@1532c619
2022-02-18 18:35:12.273 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@1532c619
2022-02-18 18:35:12.274 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-18 18:35:12.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@778ca8ef
2022-02-18 18:35:12.275 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@34448e6c
2022-02-18 18:35:12.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@65e7f52a
2022-02-18 18:35:12.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@65e7f52a
2022-02-18 18:35:12.277 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@65e7f52a
2022-02-18 18:35:12.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-18 18:35:12.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-18 18:35:12.279 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@7daa61f3
2022-02-18 18:35:12.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@48e7b3d2
2022-02-18 18:35:12.281 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@110844f6
2022-02-18 18:35:12.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-18 18:35:12.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-18 18:35:12.283 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@5f2afe62
2022-02-18 18:35:12.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-18 18:35:12.285 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-18 18:35:12.286 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@5339bbad
2022-02-18 18:35:12.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@452c8a40
2022-02-18 18:35:12.287 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@66d57c1b
2022-02-18 18:35:12.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@36453307
2022-02-18 18:35:12.290 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@36453307
2022-02-18 18:35:12.291 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@75504cef
2022-02-18 18:35:12.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@3e598df9
2022-02-18 18:35:12.293 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@3e598df9
2022-02-18 18:35:12.295 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@111610e6
2022-02-18 18:35:12.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@111610e6
2022-02-18 18:35:12.296 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@25cc7470
2022-02-18 18:35:12.297 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d28bcd5
2022-02-18 18:35:12.299 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@55120f99
2022-02-18 18:35:12.302 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-18 18:35:12.303 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@30e92cb9
2022-02-18 18:35:12.304 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@46baf579
2022-02-18 18:35:12.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-18 18:35:12.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-18 18:35:12.305 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-18 18:35:12.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-18 18:35:12.306 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-18 18:35:12.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-18 18:35:12.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-18 18:35:12.326 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@7bc9e6ab] into BootstrapContext; was [null]
2022-02-18 18:35:12.326 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@5488b5c5] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58]
2022-02-18 18:35:12.397 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 18:35:12.397 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 18:35:12.427 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 18:35:12.428 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 18:35:12.436 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 18:35:12.437 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 18:35:12.438 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 18:35:12.441 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 18:35:12.442 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 18:35:12.445 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 18:35:12.448 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 18:35:12.452 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 18:35:12.454 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 18:35:12.456 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 18:35:12.457 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 18:35:12.467 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 18:35:12.480 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 18:35:12.497 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 18:35:12.500 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 18:35:12.502 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 18:35:12.509 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 18:35:12.510 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 18:35:12.874 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-18 18:35:12.875 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-18 18:35:12.875 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-18 18:35:12.894 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 18:35:12.913 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-18 18:35:12.914 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 18:35:12.940 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58a2b4c] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@7159a5cd]
2022-02-18 18:35:12.985 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-18 18:35:12.999 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-18 18:35:13.022 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-18 18:35:13.031 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-18 18:35:13.039 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-18 18:35:13.072 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-18 18:35:13.076 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 18:35:13.076 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 18:35:13.078 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-18 18:35:13.081 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-18 18:35:13.085 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-18 18:35:13.092 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-18 18:35:13.097 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-18 18:35:13.098 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-18 18:35:13.099 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-18 18:35:13.099 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-18 18:35:13.100 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-18 18:35:13.101 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-18 18:35:13.111 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-18 18:35:13.112 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-18 18:35:13.114 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-18 18:35:13.213 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-18 18:35:13.216 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-18 18:35:13.217 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-18 18:35:13.218 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-18 18:35:13.218 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-18 18:35:13.218 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-18 18:35:13.219 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-18 18:35:13.219 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-18 18:35:13.220 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-18 18:35:13.220 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-18 18:35:13.220 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-18 18:35:13.221 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-18 18:35:13.221 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-18 18:35:13.221 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-18 18:35:13.222 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-18 18:35:13.222 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-18 18:35:13.223 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-18 18:35:13.223 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-18 18:35:13.223 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-18 18:35:13.224 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-18 18:35:13.224 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-18 18:35:13.224 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-18 18:35:13.224 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-18 18:35:13.225 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-18 18:35:13.225 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-18 18:35:13.225 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-18 18:35:13.226 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-18 18:35:13.226 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-18 18:35:13.227 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-18 18:35:13.227 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-18 18:35:13.228 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-18 18:35:13.228 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-18 18:35:13.229 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-18 18:35:13.229 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-18 18:35:13.230 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-18 18:35:13.230 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-18 18:35:13.231 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-18 18:35:13.231 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-18 18:35:13.232 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-18 18:35:13.341 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:35:13.343 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:35:13.372 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-18 18:35:13.372 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.15\spring-context-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.15\spring-aop-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.15\spring-beans-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.15\spring-expression-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.15\spring-core-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.15\spring-jcl-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.15\spring-tx-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.15\spring-orm-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.15\spring-jdbc-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1fb2d5e, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-18 18:35:13.397 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-18 18:35:13.399 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-18 18:35:13.400 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@58a2b4c] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@53cf9c99]
2022-02-18 18:35:13.509 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 18:35:13.509 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 18:35:13.825 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-18 18:35:13.825 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-18 18:35:13.825 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-18 18:35:13.826 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-18 18:35:13.826 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-18 18:35:13.826 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-18 18:35:13.826 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-18 18:35:13.850 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32d5279]
2022-02-18 18:35:13.852 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-18 18:35:13.852 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-18 18:35:13.868 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-18 18:35:13.873 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-18 18:35:13.876 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-18 18:35:13.924 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-18 18:35:13.927 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@104dc1a2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 18:35:13.946 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-18 18:35:13.947 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@e829999] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 18:35:13.962 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-18 18:35:13.963 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-18 18:35:13.972 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 18:35:13.973 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 18:35:13.975 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-18 18:35:13.976 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-18 18:35:13.984 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 18:35:13.995 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@6975fb1c
2022-02-18 18:35:13.998 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 5386ada7-470e-41ba-9cca-ecbfd7a05954 (<unnamed>)
2022-02-18 18:35:13.999 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-18 18:35:14.110 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 18:37:42.892 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de76cc7
2022-02-18 18:37:43.080 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 18:43:43.020 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1de76cc7
2022-02-18 18:43:43.215 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 19:10:26.715 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@bae7dc0
2022-02-18 19:10:27.044 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 19:10:27.267 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 19:10:27.465 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 19:10:27.466 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 19:10:27.471 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 19:10:27.486 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 19:10:27.498 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 19:10:27.505 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 19:10:27.516 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 19:10:27.601 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 19:10:27.604 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 19:10:28.049 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 19:10:28.093 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 19:10:28.107 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 19:10:28.152 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 19:10:28.377 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 19:10:28.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 19:10:28.378 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@5d52e3ef
2022-02-18 19:10:28.380 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4e406694
2022-02-18 19:10:28.381 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@2b50150
2022-02-18 19:10:28.383 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@6b530eb9
2022-02-18 19:10:28.386 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 19:10:28.387 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 19:10:28.388 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@44d70181
2022-02-18 19:10:28.390 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 19:10:28.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 19:10:28.391 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5fa05212
2022-02-18 19:10:28.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 19:10:28.393 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 19:10:28.394 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@2d83c5a5
2022-02-18 19:10:28.395 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@a68df9
2022-02-18 19:10:28.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@a68df9
2022-02-18 19:10:28.396 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@a68df9
2022-02-18 19:10:28.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@169da7f2
2022-02-18 19:10:28.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@169da7f2
2022-02-18 19:10:28.398 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@169da7f2
2022-02-18 19:10:28.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 19:10:28.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 19:10:28.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2ba45490
2022-02-18 19:10:28.402 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 19:10:28.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 19:10:28.403 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@36c54a56
2022-02-18 19:10:28.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@68ace111
2022-02-18 19:10:28.405 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@68ace111
2022-02-18 19:10:28.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5eefa415
2022-02-18 19:10:28.407 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5eefa415
2022-02-18 19:10:28.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@344b8190
2022-02-18 19:10:28.409 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@344b8190
2022-02-18 19:10:28.410 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@718607eb
2022-02-18 19:10:28.411 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@676f0a60
2022-02-18 19:10:28.412 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@6759f091
2022-02-18 19:10:28.413 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6759f091
2022-02-18 19:10:28.414 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@55b5e331
2022-02-18 19:10:28.415 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@55b5e331
2022-02-18 19:10:28.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@46b695ec
2022-02-18 19:10:28.420 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@46b695ec
2022-02-18 19:10:28.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3af9aa66
2022-02-18 19:10:28.422 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3af9aa66
2022-02-18 19:10:28.423 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@64d43929
2022-02-18 19:10:28.424 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@64d43929
2022-02-18 19:10:28.425 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@1e7f2e0f
2022-02-18 19:10:28.426 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@1e7f2e0f
2022-02-18 19:10:28.428 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2516fc68
2022-02-18 19:10:28.429 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@2516fc68
2022-02-18 19:10:28.430 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@347bdeef
2022-02-18 19:10:28.431 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@347bdeef
2022-02-18 19:10:28.434 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49298ce7
2022-02-18 19:10:28.434 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@49298ce7
2022-02-18 19:10:28.436 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@194152cf
2022-02-18 19:10:28.437 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@194152cf
2022-02-18 19:10:28.438 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@1654a892
2022-02-18 19:10:28.439 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@1654a892
2022-02-18 19:10:28.440 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 19:10:28.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 19:10:28.441 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@43d455c9
2022-02-18 19:10:28.443 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@210f0cc1
2022-02-18 19:10:28.444 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 19:10:28.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 19:10:28.445 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@76304b46
2022-02-18 19:10:28.446 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@7c0da600
2022-02-18 19:10:28.456 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@e044b4a
2022-02-18 19:10:28.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@e36bb2a
2022-02-18 19:10:28.458 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@e36bb2a
2022-02-18 19:10:28.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@1fd386c3
2022-02-18 19:10:28.460 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@1fd386c3
2022-02-18 19:10:28.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@60e949e1
2022-02-18 19:10:28.462 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@60e949e1
2022-02-18 19:10:28.463 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@c827db
2022-02-18 19:10:28.464 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@c827db
2022-02-18 19:10:28.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@654c1a54
2022-02-18 19:10:28.465 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@654c1a54
2022-02-18 19:10:28.466 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@19f21b6b
2022-02-18 19:10:28.468 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 19:10:28.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 19:10:28.469 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@778ca8ef
2022-02-18 19:10:28.470 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 19:10:28.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 19:10:28.471 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@435ce306
2022-02-18 19:10:28.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@75699e35
2022-02-18 19:10:28.473 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@1f14f20c
2022-02-18 19:10:28.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 19:10:28.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 19:10:28.475 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@b0964b2
2022-02-18 19:10:28.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 19:10:28.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 19:10:28.477 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@df1cff6
2022-02-18 19:10:28.478 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@39ce27f2
2022-02-18 19:10:28.480 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@60c16548
2022-02-18 19:10:28.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@29006752
2022-02-18 19:10:28.482 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@29006752
2022-02-18 19:10:28.484 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@d59970a
2022-02-18 19:10:28.485 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@66eb985d
2022-02-18 19:10:28.486 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@66eb985d
2022-02-18 19:10:28.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@81ff872
2022-02-18 19:10:28.488 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@81ff872
2022-02-18 19:10:28.489 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@99a65d3
2022-02-18 19:10:28.490 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6813a331
2022-02-18 19:10:28.491 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@79b663b3
2022-02-18 19:10:28.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@265c5d69
2022-02-18 19:10:28.495 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@265c5d69
2022-02-18 19:10:28.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@775594f2
2022-02-18 19:10:28.496 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5767b2af
2022-02-18 19:10:28.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@7b22ec89
2022-02-18 19:10:28.497 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@790132f7
2022-02-18 19:10:28.498 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@2228db21
2022-02-18 19:10:28.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@48b0e701
2022-02-18 19:10:28.499 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@241a0c3a
2022-02-18 19:10:28.500 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@547c04c4
2022-02-18 19:10:28.514 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@4d7e7435] into BootstrapContext; was [null]
2022-02-18 19:10:28.514 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4a1e3ac1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6e78fcf5]
2022-02-18 19:10:28.580 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 19:10:28.580 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 19:10:28.599 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 19:10:28.600 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 19:10:28.602 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 19:10:28.602 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 19:10:28.603 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 19:10:28.605 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 19:10:28.607 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 19:10:28.609 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 19:10:28.611 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 19:10:28.612 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 19:10:28.613 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 19:10:28.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 19:10:28.614 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 19:10:28.616 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 19:10:28.622 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 19:10:28.631 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 19:10:28.632 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 19:10:28.632 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 19:10:28.636 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 19:10:28.637 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 19:10:29.006 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-18 19:10:29.007 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-18 19:10:29.007 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-18 19:10:29.025 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 19:10:29.045 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-18 19:10:29.046 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 19:10:29.074 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1b9c3d] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@69e05f61]
2022-02-18 19:10:29.122 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-18 19:10:29.138 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-18 19:10:29.157 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-18 19:10:29.164 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-18 19:10:29.172 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-18 19:10:29.205 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-18 19:10:29.210 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 19:10:29.210 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 19:10:29.212 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-18 19:10:29.215 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-18 19:10:29.219 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-18 19:10:29.223 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-18 19:10:29.228 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-18 19:10:29.230 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-18 19:10:29.230 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-18 19:10:29.231 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-18 19:10:29.231 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-18 19:10:29.232 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-18 19:10:29.245 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-18 19:10:29.246 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-18 19:10:29.248 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-18 19:10:29.365 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-18 19:10:29.368 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-18 19:10:29.369 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-18 19:10:29.370 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-18 19:10:29.370 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-18 19:10:29.371 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-18 19:10:29.372 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-18 19:10:29.372 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-18 19:10:29.373 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-18 19:10:29.373 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-18 19:10:29.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-18 19:10:29.374 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-18 19:10:29.375 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-18 19:10:29.375 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-18 19:10:29.375 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-18 19:10:29.376 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-18 19:10:29.376 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-18 19:10:29.377 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-18 19:10:29.377 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-18 19:10:29.378 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-18 19:10:29.378 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-18 19:10:29.378 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-18 19:10:29.379 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-18 19:10:29.379 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-18 19:10:29.379 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-18 19:10:29.380 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-18 19:10:29.380 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-18 19:10:29.381 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-18 19:10:29.381 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-18 19:10:29.381 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-18 19:10:29.383 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-18 19:10:29.385 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-18 19:10:29.385 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-18 19:10:29.386 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-18 19:10:29.386 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-18 19:10:29.387 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-18 19:10:29.387 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-18 19:10:29.388 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-18 19:10:29.388 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-18 19:10:29.537 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:10:29.540 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:10:29.578 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-18 19:10:29.579 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.15\spring-context-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.15\spring-aop-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.15\spring-beans-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.15\spring-expression-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.15\spring-core-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.15\spring-jcl-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.15\spring-tx-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.15\spring-orm-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.15\spring-jdbc-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@3d4e405e, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-18 19:10:29.606 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-18 19:10:29.607 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-18 19:10:29.607 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@5d1b9c3d] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f84acf7]
2022-02-18 19:10:29.685 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 19:10:29.685 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 19:10:30.172 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-18 19:10:30.173 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-18 19:10:30.173 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-18 19:10:30.173 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-18 19:10:30.174 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-18 19:10:30.174 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-18 19:10:30.174 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-18 19:10:30.212 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cedee22]
2022-02-18 19:10:30.214 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-18 19:10:30.215 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-18 19:10:30.229 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-18 19:10:30.235 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-18 19:10:30.237 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-18 19:10:30.287 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-18 19:10:30.292 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@6707a4bf] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 19:10:30.314 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-18 19:10:30.315 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@217c23ce] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 19:10:30.325 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-18 19:10:30.326 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-18 19:10:30.335 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 19:10:30.336 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 19:10:30.338 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-18 19:10:30.338 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-18 19:10:30.347 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:10:30.358 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@7ccfdaef
2022-02-18 19:10:30.361 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: 7563a0eb-26c8-4846-b1c9-48c0ea2ad22b (<unnamed>)
2022-02-18 19:10:30.361 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-18 19:10:30.506 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 19:10:30.557 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-02-18 19:10:30.559 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:10:30.595 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:10:30.601 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:10:30.663 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-02-18 19:10:30.663 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:10:30.669 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:10:30.670 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:10:30.673 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:10:30.680 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-02-18 19:10:30.680 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:10:30.683 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:10:30.684 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:10:30.688 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.690 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.690 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:10:30.691 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:10:30.692 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:10:30.694 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-02-18 19:10:30.694 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:10:30.695 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:10:30.695 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:10:30.695 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:10:30.696 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-02-18 19:10:30.696 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:10:30.697 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:10:30.697 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:10:30.698 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:10:30.699 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.700 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.701 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:10:30.705 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:10:30.705 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:10:30.707 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-02-18 19:10:30.707 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:10:30.707 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:10:30.708 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:10:30.708 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:10:30.708 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-02-18 19:10:30.709 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:10:30.709 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:10:30.709 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:10:30.710 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:10:30.710 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:10:30.712 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.712 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.713 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:10:30.721 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:10:30.721 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:10:30.727 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-02-18 19:10:30.728 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:10:30.728 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:10:30.730 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:10:30.731 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:10:30.732 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-02-18 19:10:30.732 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:10:30.733 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:10:30.733 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=FARAH, id=4}
2022-02-18 19:10:30.734 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:10:30.734 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:10:30.735 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:10:30.736 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.736 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.737 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:10:30.748 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:10:30.748 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:10:30.748 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:10:30.751 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-02-18 19:10:30.752 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:10:30.752 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:10:30.753 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=FARAH, id=4}
2022-02-18 19:10:30.753 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:10:30.753 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:10:30.754 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=new Name, id=1}
2022-02-18 19:10:30.767 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-02-18 19:10:30.788 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.789 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:10:30.789 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:47.196 DEBUG [main][org.springframework.context.support.ClassPathXmlApplicationContext] [prepareRefresh] [org.springframework.context.support.AbstractApplicationContext.prepareRefresh(AbstractApplicationContext.java:629)] - Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@54bff557
2022-02-18 19:52:47.384 DEBUG [main][org.springframework.beans.factory.xml.XmlBeanDefinitionReader] [doLoadBeanDefinitions] [org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:393)] - Loaded 3 bean definitions from class path resource [spring.xml]
2022-02-18 19:52:47.509 DEBUG [main][org.jboss.logging] [logProvider] [org.jboss.logging.LoggerProviders.logProvider(LoggerProviders.java:152)] - Logging Provider: org.jboss.logging.Log4j2LoggerProvider
2022-02-18 19:52:47.666 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:88)] - Located and parsed 1 persistence units; checking each
2022-02-18 19:52:47.666 DEBUG [main][org.hibernate.jpa.HibernatePersistenceProvider] [getEntityManagerFactoryBuilderOrNull] [org.hibernate.jpa.HibernatePersistenceProvider.getEntityManagerFactoryBuilderOrNull(HibernatePersistenceProvider.java:96)] - Checking persistence-unit [name=unit_clients, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [unit_clients]
2022-02-18 19:52:47.666 DEBUG [main][org.hibernate.jpa.boot.spi.ProviderChecker] [extractRequestedProviderName] [org.hibernate.jpa.boot.spi.ProviderChecker.extractRequestedProviderName(ProviderChecker.java:85)] - Persistence-unit [unit_clients] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
2022-02-18 19:52:47.682 DEBUG [main][org.hibernate.jpa.internal.util.LogHelper] [logPersistenceUnitInformation] [org.hibernate.jpa.internal.util.LogHelper.logPersistenceUnitInformation(LogHelper.java:102)] - PersistenceUnitInfo [
	name: unit_clients
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/C:/Users/belbarji/IdeaProjects/MonPFE/target/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		javax.persistence.jdbc.driver: com.mysql.jdbc.Driver
		javax.persistence.jdbc.password: root2022
		hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
		javax.persistence.jdbc.url: jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true
		hibernate.show_sql: true
		hibernate.hbm2ddl.auto: create
		hibernate.format_sql: true
		javax.persistence.jdbc.user: root]
2022-02-18 19:52:47.682 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2022-02-18 19:52:47.682 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2022-02-18 19:52:47.697 DEBUG [main][org.hibernate.integrator.internal.IntegratorServiceImpl] [addIntegrator] [org.hibernate.integrator.internal.IntegratorServiceImpl.addIntegrator(IntegratorServiceImpl.java:46)] - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2022-02-18 19:52:47.791 INFO [main][org.hibernate.Version] [logVersion] [org.hibernate.Version.logVersion(Version.java:44)] - HHH000412: Hibernate ORM core version 5.6.5.Final
2022-02-18 19:52:47.791 DEBUG [main][org.hibernate.cfg.Environment] [<clinit>] [org.hibernate.cfg.Environment.<clinit>(Environment.java:199)] - HHH000206: hibernate.properties not found
2022-02-18 19:52:48.135 DEBUG [main][org.hibernate.service.spi.ServiceBinding] [setService] [org.hibernate.service.spi.ServiceBinding.setService(ServiceBinding.java:68)] - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2022-02-18 19:52:48.150 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [resolveRegionFactory] [org.hibernate.cache.internal.RegionFactoryInitiator.resolveRegionFactory(RegionFactoryInitiator.java:118)] - Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
2022-02-18 19:52:48.166 DEBUG [main][org.hibernate.cache.internal.RegionFactoryInitiator] [initiateService] [org.hibernate.cache.internal.RegionFactoryInitiator.initiateService(RegionFactoryInitiator.java:49)] - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2022-02-18 19:52:48.182 INFO [main][org.hibernate.annotations.common.Version] [<clinit>] [org.hibernate.annotations.common.reflection.java.JavaReflectionManager.<clinit>(JavaReflectionManager.java:56)] - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@328572f0
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@7d2a6eac
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration true_false -> org.hibernate.type.TrueFalseType@6aa648b9
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration yes_no -> org.hibernate.type.YesNoType@50b1f030
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@7a9c84a5
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration character -> org.hibernate.type.CharacterType@710b30ef
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char -> org.hibernate.type.CharacterType@710b30ef
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@710b30ef
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration short -> org.hibernate.type.ShortType@64711bf2
2022-02-18 19:52:48.307 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@64711bf2
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration integer -> org.hibernate.type.IntegerType@df4b72
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration int -> org.hibernate.type.IntegerType@df4b72
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@df4b72
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration long -> org.hibernate.type.LongType@74cf8b28
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Long -> org.hibernate.type.LongType@74cf8b28
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration float -> org.hibernate.type.FloatType@584f5497
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@584f5497
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration double -> org.hibernate.type.DoubleType@4943defe
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@4943defe
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@2f19f2aa
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@757f675c
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@757f675c
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration string -> org.hibernate.type.StringType@a53bb6f
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.String -> org.hibernate.type.StringType@a53bb6f
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@14a54ef6
2022-02-18 19:52:48.322 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@654b72c0
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration url -> org.hibernate.type.UrlType@7da10b5b
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.net.URL -> org.hibernate.type.UrlType@7da10b5b
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@595f4da5
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Instant -> org.hibernate.type.InstantType@3003697
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@3003697
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1bdbf9be
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@15f193b8
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-18 19:52:48.338 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@2d140a7
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7ea4d397
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@67fe380b
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@2c30b71f
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration date -> org.hibernate.type.DateType@44f9779c
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Date -> org.hibernate.type.DateType@44f9779c
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration time -> org.hibernate.type.TimeType@19542407
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@19542407
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2fa3be26
2022-02-18 19:52:48.354 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2fa3be26
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@7c0da600
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@11a82d0f
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@73d6d0c
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@1500e009
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@cd7f1ae
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@7a356a0d
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration timezone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@22df874e
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration class -> org.hibernate.type.ClassType@46044faa
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@46044faa
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@208e9ef6
2022-02-18 19:52:48.369 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@60e9df3c
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration binary -> org.hibernate.type.BinaryType@304b9f1a
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration byte[] -> org.hibernate.type.BinaryType@304b9f1a
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [B -> org.hibernate.type.BinaryType@304b9f1a
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@62315f22
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration row_version -> org.hibernate.type.RowVersionType@7f4037ed
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration image -> org.hibernate.type.ImageType@6f89f665
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration characters -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration char[] -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [C -> org.hibernate.type.CharArrayType@c96a4ea
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3935e9a8
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration text -> org.hibernate.type.TextType@534243e4
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration ntext -> org.hibernate.type.NTextType@27494e46
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-18 19:52:48.385 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7dcc91fd
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6c8a68c1
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@7e31ce0f
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration nclob -> org.hibernate.type.NClobType@4ad4936c
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4ad4936c
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4beddc56
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@7882c44a
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration serializable -> org.hibernate.type.SerializableType@794b435f
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-18 19:52:48.400 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7fae4d4a
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@4bf324f9
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@4f7c0be3
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@ca66933
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1d2644e3
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@4fa06f52
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@602c4656
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ffc5491
2022-02-18 19:52:48.416 DEBUG [main][org.hibernate.type.BasicTypeRegistry] [register] [org.hibernate.type.BasicTypeRegistry.register(BasicTypeRegistry.java:157)] - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@705202d1
2022-02-18 19:52:48.432 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanEnvironment] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanEnvironment(BootstrapContextImpl.java:269)] - Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5488b5c5] into BootstrapContext; was [null]
2022-02-18 19:52:48.432 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectScanOptions] [org.hibernate.boot.internal.BootstrapContextImpl.injectScanOptions(BootstrapContextImpl.java:264)] - Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4248ed58] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@712ca57b]
2022-02-18 19:52:48.494 DEBUG [main][org.hibernate.boot.internal.BootstrapContextImpl] [injectJpaTempClassLoader] [org.hibernate.boot.internal.BootstrapContextImpl.injectJpaTempClassLoader(BootstrapContextImpl.java:259)] - Injecting JPA temp ClassLoader [null] into BootstrapContext; was [null]
2022-02-18 19:52:48.494 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [injectTempClassLoader] [org.hibernate.boot.internal.ClassLoaderAccessImpl.injectTempClassLoader(ClassLoaderAccessImpl.java:45)] - ClassLoaderAccessImpl#injectTempClassLoader(null) [was null]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2022-02-18 19:52:48.510 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2022-02-18 19:52:48.525 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2022-02-18 19:52:48.525 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2022-02-18 19:52:48.525 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2022-02-18 19:52:48.525 DEBUG [main][org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] [register] [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory.register(DefaultIdentifierGeneratorFactory.java:98)] - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2022-02-18 19:52:48.525 WARN [main][org.hibernate.orm.connections.pooling] [configure] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.configure(DriverManagerConnectionProviderImpl.java:72)] - HHH10001002: Using Hibernate built-in connection pool (not for production use!)
2022-02-18 19:52:48.541 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:115)] - HHH10001005: using driver [com.mysql.jdbc.Driver] at URL [jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true]
2022-02-18 19:52:48.541 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:121)] - HHH10001001: Connection properties: {password=root2022, user=root}
2022-02-18 19:52:48.541 INFO [main][org.hibernate.orm.connections.pooling] [buildCreator] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl.buildCreator(DriverManagerConnectionProviderImpl.java:129)] - HHH10001003: Autocommit mode: false
2022-02-18 19:52:48.541 DEBUG [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:384)] - Initializing Connection pool with 1 Connections
2022-02-18 19:52:48.541 INFO [main][org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl] [<init>] [org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections.<init>(DriverManagerConnectionProviderImpl.java:274)] - HHH000115: Hibernate connection pool size: 20 (min=1)
2022-02-18 19:52:48.807 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:72)] - Database ->
       name : MySQL
    version : 5.5.5-10.4.22-MariaDB
      major : 5
      minor : 5
2022-02-18 19:52:48.807 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [initiateService] [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator.initiateService(JdbcEnvironmentInitiator.java:83)] - Driver ->
       name : MySQL Connector/J
    version : mysql-connector-java-8.0.25 (Revision: 08be9e9b4cba6aa115f9b27b215887af40b159e0)
      major : 8
      minor : 0
2022-02-18 19:52:48.807 DEBUG [main][org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:389)] - JDBC version : 4.2
2022-02-18 19:52:48.822 INFO [main][org.hibernate.dialect.Dialect] [<init>] [org.hibernate.dialect.Dialect.<init>(Dialect.java:175)] - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2022-02-18 19:52:48.851 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [applyIdentifierCasing] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.applyIdentifierCasing(IdentifierHelperBuilder.java:119)] - JDBC driver metadata reported database stores quoted identifiers in more than one case
2022-02-18 19:52:48.859 DEBUG [main][org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] [build] [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder.build(IdentifierHelperBuilder.java:197)] - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
2022-02-18 19:52:48.874 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:149)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@4f966719]
2022-02-18 19:52:48.905 DEBUG [main][org.hibernate.boot.model.relational.Namespace] [<init>] [org.hibernate.boot.model.relational.Namespace.<init>(Namespace.java:51)] - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
2022-02-18 19:52:48.921 DEBUG [main][org.hibernate.cfg.AnnotationBinder] [bindClass] [org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:546)] - Binding entity from annotated class: cigma.pfe.models.Client
2022-02-18 19:52:48.937 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2022-02-18 19:52:48.952 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindEntity] [org.hibernate.cfg.annotations.EntityBinder.bindEntity(EntityBinder.java:431)] - Import with entity name TClients
2022-02-18 19:52:48.952 DEBUG [main][org.hibernate.cfg.annotations.EntityBinder] [bindTable] [org.hibernate.cfg.annotations.EntityBinder.bindTable(EntityBinder.java:874)] - Bind entity cigma.pfe.models.Client on table TClients
2022-02-18 19:52:48.984 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=id, insertable=true, updatable=true, unique=false}
2022-02-18 19:52:48.984 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 19:52:48.984 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 19:52:48.999 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property id with lazy=false
2022-02-18 19:52:48.999 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:id]
2022-02-18 19:52:48.999 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for id
2022-02-18 19:52:48.999 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property id
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.BinderHelper] [makeIdGenerator] [org.hibernate.cfg.BinderHelper.makeIdGenerator(BinderHelper.java:514)] - #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(id)]), id, identity, , ...)
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.Ejb3Column] [bind] [org.hibernate.cfg.Ejb3Column.bind(Ejb3Column.java:227)] - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(TClients), mappingColumn=name, insertable=true, updatable=true, unique=false}
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makePropertyAndValue] [org.hibernate.cfg.annotations.PropertyBinder.makePropertyAndValue(PropertyBinder.java:175)] - MetadataSourceProcessor property name with lazy=false
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.AbstractPropertyHolder] [resolveAttributeConverterDescriptor] [org.hibernate.cfg.AbstractPropertyHolder.resolveAttributeConverterDescriptor(AbstractPropertyHolder.java:94)] - Attempting to locate auto-apply AttributeConverter for property [cigma.pfe.models.Client:name]
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [make] [org.hibernate.cfg.annotations.SimpleValueBinder.make(SimpleValueBinder.java:410)] - building SimpleValue for name
2022-02-18 19:52:49.015 DEBUG [main][org.hibernate.cfg.annotations.PropertyBinder] [makeProperty] [org.hibernate.cfg.annotations.PropertyBinder.makeProperty(PropertyBinder.java:266)] - Building property name
2022-02-18 19:52:49.046 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for id
2022-02-18 19:52:49.046 DEBUG [main][org.hibernate.cfg.annotations.SimpleValueBinder] [fillSimpleValue] [org.hibernate.cfg.annotations.SimpleValueBinder.fillSimpleValue(SimpleValueBinder.java:455)] - Starting fillSimpleValue for name
2022-02-18 19:52:49.062 DEBUG [main][org.hibernate.mapping.PrimaryKey] [addColumn] [org.hibernate.mapping.PrimaryKey.addColumn(PrimaryKey.java:36)] - Forcing column [id] to be non-null as it is part of the primary key for table [tclients]
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:208)] - Building session factory
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:68)] - SessionFactory name : null
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:69)] - Automatic flush during beforeCompletion(): enabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:70)] - Automatic session close at end of transaction: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:72)] - Statistics: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:74)] - Deleted entity synthetic identifier rollback: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:75)] - Default entity-mode: pojo
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:76)] - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:77)] - Allow initialization of lazy state outside session : disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:79)] - Using BatchFetchStyle : LEGACY
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:80)] - Default batch fetch size: -1
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:81)] - Maximum outer join fetch depth: 2
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:82)] - Default null ordering: NONE
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:83)] - Order SQL updates by primary key: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:84)] - Order SQL inserts for batching: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:86)] - multi-tenancy strategy : NONE
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:88)] - JTA Track by Thread: enabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:90)] - Query language substitutions: {}
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:91)] - Named query checking : enabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:93)] - Second-level cache: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:94)] - Second-level query cache: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:95)] - Second-level query cache factory: null
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:96)] - Second-level cache region prefix: null
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:97)] - Optimize second-level cache for minimal puts: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:98)] - Structured second-level cache entries: disabled
2022-02-18 19:52:49.142 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:99)] - Second-level cache direct-reference entries: disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:100)] - Automatic eviction of collection cache: disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:102)] - JDBC batch size: 15
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:103)] - JDBC batch updates for versioned data: enabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:104)] - Scrollable result sets: enabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:105)] - Wrap result sets: disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:106)] - JDBC3 getGeneratedKeys(): enabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:107)] - JDBC result set fetch size: null
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:108)] - Connection release mode: AFTER_TRANSACTION
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:109)] - Generate SQL with comments: disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:111)] - JPA compliance - query : disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:112)] - JPA compliance - closed-handling : disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:113)] - JPA compliance - lists : disabled
2022-02-18 19:52:49.158 DEBUG [main][org.hibernate.cfg.Settings] [<init>] [org.hibernate.cfg.Settings.<init>(Settings.java:114)] - JPA compliance - transactions : disabled
2022-02-18 19:52:49.236 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:52:49.236 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:52:49.283 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:276)] - Session factory constructed with filter configurations : {}
2022-02-18 19:52:49.283 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:277)] - Instantiating session factory with properties: {hibernate.format_sql=true, java.specification.version=17, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1256, hibernate.dialect=org.hibernate.dialect.MySQL5Dialect, java.class.path=C:\Users\belbarji\IdeaProjects\MonPFE\target\classes;C:\Users\belbarji\.m2\repository\org\springframework\spring-context\5.3.15\spring-context-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-aop\5.3.15\spring-aop-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-beans\5.3.15\spring-beans-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-expression\5.3.15\spring-expression-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-core\5.3.15\spring-core-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jcl\5.3.15\spring-jcl-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-tx\5.3.15\spring-tx-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-orm\5.3.15\spring-orm-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\springframework\spring-jdbc\5.3.15\spring-jdbc-5.3.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-core\5.6.5.Final\hibernate-core-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\logging\jboss-logging\3.4.3.Final\jboss-logging-3.4.3.Final.jar;C:\Users\belbarji\.m2\repository\javax\persistence\javax.persistence-api\2.2\javax.persistence-api-2.2.jar;C:\Users\belbarji\.m2\repository\net\bytebuddy\byte-buddy\1.12.7\byte-buddy-1.12.7.jar;C:\Users\belbarji\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\belbarji\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.1.1.Final\jboss-transaction-api_1.2_spec-1.1.1.Final.jar;C:\Users\belbarji\.m2\repository\org\jboss\jandex\2.4.2.Final\jandex-2.4.2.Final.jar;C:\Users\belbarji\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\belbarji\.m2\repository\javax\activation\javax.activation-api\1.2.0\javax.activation-api-1.2.0.jar;C:\Users\belbarji\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.1.2.Final\hibernate-commons-annotations-5.1.2.Final.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\jaxb-runtime\2.3.1\jaxb-runtime-2.3.1.jar;C:\Users\belbarji\.m2\repository\org\glassfish\jaxb\txw2\2.3.1\txw2-2.3.1.jar;C:\Users\belbarji\.m2\repository\com\sun\istack\istack-commons-runtime\3.0.7\istack-commons-runtime-3.0.7.jar;C:\Users\belbarji\.m2\repository\org\jvnet\staxex\stax-ex\1.8\stax-ex-1.8.jar;C:\Users\belbarji\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.15\FastInfoset-1.2.15.jar;C:\Users\belbarji\.m2\repository\org\hibernate\hibernate-entitymanager\5.6.5.Final\hibernate-entitymanager-5.6.5.Final.jar;C:\Users\belbarji\.m2\repository\javax\transaction\jta\1.1\jta-1.1.jar;C:\Users\belbarji\.m2\repository\mysql\mysql-connector-java\8.0.25\mysql-connector-java-8.0.25.jar;C:\Users\belbarji\.m2\repository\com\google\protobuf\protobuf-java\3.11.4\protobuf-java-3.11.4.jar;C:\Users\belbarji\.m2\repository\javax\xml\bind\jaxb-api\2.4.0-b180830.0359\jaxb-api-2.4.0-b180830.0359.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.1\log4j-api-2.17.1.jar;C:\Users\belbarji\.m2\repository\org\apache\logging\log4j\log4j-core\2.17.1\log4j-core-2.17.1.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=https://java.oracle.com/, user.timezone=Africa/Casablanca, javax.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, javax.persistence.jdbc.user=****, java.vm.specification.version=17, os.name=Windows 10, jakarta.persistence.jdbc.password=****, sun.java.launcher=SUN_STANDARD, user.country=FR, local.setting.IS_JTA_TXN_COORD=false, sun.boot.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin, sun.java.command=cigma.pfe.ApplicationRunner, jdk.debug=release, jakarta.persistence.jdbc.driver=com.mysql.jdbc.Driver, sun.cpu.endian=little, user.home=C:\Users\belbarji, user.language=fr, java.specification.vendor=Oracle Corporation, java.version.date=2022-01-18, java.home=C:\Users\belbarji\.jdks\openjdk-17.0.2, file.separator=\, java.vm.compressedOopsMode=32-bit, jakarta.persistence.jdbc.user=****, line.separator=
, hibernate.persistenceUnitName=unit_clients, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, javax.persistence.jdbc.driver=com.mysql.jdbc.Driver, hibernate.hbm2ddl.auto=create, user.script=, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, java.runtime.version=17.0.2+8-86, user.name=belbarji, path.separator=;, hibernate.connection.username=****, os.version=10.0, java.runtime.name=OpenJDK Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=unit_clients, java.vm.name=OpenJDK 64-Bit Server VM, hibernate.show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=https://bugreport.java.com/bugreport/, java.io.tmpdir=C:\Users\belbarji\AppData\Local\Temp\, java.version=17.0.2, user.dir=C:\Users\belbarji\IdeaProjects\MonPFE, os.arch=amd64, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, sun.os.patch.level=, jakarta.persistence.jdbc.url=jdbc:mysql://localhost:3306/pfe_base?createDatabaseIfNotExist=true, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@1716e8c5, native.encoding=Cp1256, java.library.path=C:\Users\belbarji\.jdks\openjdk-17.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files\MySQL\MySQL Server 8.0\bin;C:\Program Files (x86)\VMware\VMware Workstation\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\WINDOWS\system32\config\systemprofile\.dnx\bin;C:\Program Files\Microsoft DNX\Dnvm\;C:\Program Files\Microsoft SQL Server\120\Tools\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files\Git\cmd;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Program Files\Java\jdk-14.0.1\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2021.2.3\bin;;C:\php 8.1.0;C:\Users\belbarji\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\belbarji\AppData\Local\GitHubDesktop\bin;C:\Program Files\MySQL\MySQL Server 8.0\bin;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, sharing, java.vm.version=17.0.2+8-86, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, javax.persistence.jdbc.password=****, java.class.version=61.0}
2022-02-18 19:52:49.298 DEBUG [main][org.hibernate.secure.spi.JaccIntegrator] [doIntegration] [org.hibernate.secure.spi.JaccIntegrator.doIntegration(JaccIntegrator.java:84)] - Skipping JACC integration as it was not enabled
2022-02-18 19:52:49.298 DEBUG [main][org.hibernate.internal.SessionFactoryImpl] [<init>] [org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:316)] - Instantiated session factory
2022-02-18 19:52:49.298 DEBUG [main][org.hibernate.type.spi.TypeConfiguration$Scope] [scope] [org.hibernate.type.spi.TypeConfiguration.scope(TypeConfiguration.java:154)] - Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@7159a5cd] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7b306b9f]
2022-02-18 19:52:49.361 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:60)] - Not known whether passed class name [cigma.pfe.models.Client] is safe
2022-02-18 19:52:49.376 DEBUG [main][org.hibernate.boot.internal.ClassLoaderAccessImpl] [classForName] [org.hibernate.boot.internal.ClassLoaderAccessImpl.classForName(ClassLoaderAccessImpl.java:62)] - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : cigma.pfe.models.Client
2022-02-18 19:52:49.642 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4002)] - Static SQL for entity: cigma.pfe.models.Client
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4007)] -  Version select: select id from TClients where id =?
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4010)] -  Snapshot select: select client_.id, client_.name as name2_0_ from TClients client_ where client_.id=?
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Insert 0: insert into TClients (name, id) values (?, ?)
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Update 0: update TClients set name=? where id=?
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [debugf] [org.jboss.logging.DelegatingBasicLogger.debugf(DelegatingBasicLogger.java:394)] -  Delete 0: delete from TClients where id=?
2022-02-18 19:52:49.651 DEBUG [main][org.hibernate.persister.entity.AbstractEntityPersister] [logStaticSQL] [org.hibernate.persister.entity.AbstractEntityPersister.logStaticSQL(AbstractEntityPersister.java:4018)] -  Identity insert: insert into TClients (name) values (?)
2022-02-18 19:52:49.668 DEBUG [main][org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] [registerQuerySpace] [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl.registerQuerySpace(QuerySpacesImpl.java:174)] - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c067c0d]
2022-02-18 19:52:49.683 DEBUG [main][org.hibernate.persister.walking.spi.MetamodelGraphWalker] [visitAttributeDefinition] [org.hibernate.persister.walking.spi.MetamodelGraphWalker.visitAttributeDefinition(MetamodelGraphWalker.java:146)] - Visiting attribute path : name
2022-02-18 19:52:49.683 DEBUG [main][org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] [buildLoadPlan] [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy.buildLoadPlan(FetchStyleLoadPlanBuildingAssociationVisitationStrategy.java:160)] - Building LoadPlan...
2022-02-18 19:52:49.699 DEBUG [main][org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] [processQuerySpaceJoins] [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor.processQuerySpaceJoins(LoadQueryJoinAndFetchProcessor.java:102)] - processing queryspace <gen:0>
2022-02-18 19:52:49.699 DEBUG [main][org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] [logTree] [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter.logTree(LoadPlanTreePrinter.java:55)] - LoadPlan(entity=cigma.pfe.models.Client)
    - Returns
       - EntityReturnImpl(entity=cigma.pfe.models.Client, querySpaceUid=<gen:0>, path=cigma.pfe.models.Client)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=cigma.pfe.models.Client)
          - SQL table alias mapping - client0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2022-02-18 19:52:49.699 DEBUG [main][org.hibernate.loader.entity.plan.EntityLoader] [<init>] [org.hibernate.loader.entity.plan.EntityLoader.<init>(EntityLoader.java:129)] - Static select for entity cigma.pfe.models.Client [NONE]: select client0_.id as id1_0_0_, client0_.name as name2_0_0_ from TClients client0_ where client0_.id=?
2022-02-18 19:52:49.777 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    drop table if exists TClients
2022-02-18 19:52:49.777 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@67d32a54] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 19:52:49.808 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    
    create table TClients (
       id bigint not null auto_increment,
        name varchar(255),
        primary key (id)
    ) engine=MyISAM
2022-02-18 19:52:49.808 INFO [main][org.hibernate.orm.connections.access] [getIsolatedConnection] [org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl.getIsolatedConnection(DdlTransactionIsolatorNonJtaImpl.java:48)] - HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@66fb45e5] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
2022-02-18 19:52:49.824 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:43)] - No JtaPlatform was specified, checking resolver
2022-02-18 19:52:49.824 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator.initiateService(JtaPlatformResolverInitiator.java:33)] - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
2022-02-18 19:52:49.839 DEBUG [main][org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver] [resolveJtaPlatform] [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver.resolveJtaPlatform(StandardJtaPlatformResolver.java:137)] - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 19:52:49.839 INFO [main][org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator] [initiateService] [org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator.initiateService(JtaPlatformInitiator.java:52)] - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-02-18 19:52:49.839 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:171)] - Checking 0 named HQL queries
2022-02-18 19:52:49.839 DEBUG [main][org.hibernate.query.spi.NamedQueryRepository] [checkNamedQueries] [org.hibernate.query.spi.NamedQueryRepository.checkNamedQueries(NamedQueryRepository.java:185)] - Checking 0 named SQL queries
2022-02-18 19:52:49.839 DEBUG [main][org.hibernate.service.internal.SessionFactoryServiceRegistryImpl] [getService] [org.hibernate.service.internal.SessionFactoryServiceRegistryImpl.getService(SessionFactoryServiceRegistryImpl.java:92)] - EventListenerRegistry access via ServiceRegistry is deprecated.  Use `sessionFactory.getEventEngine().getListenerRegistry()` instead
2022-02-18 19:52:49.855 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [<init>] [org.hibernate.internal.SessionFactoryRegistry.<init>(SessionFactoryRegistry.java:51)] - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@553da911
2022-02-18 19:52:49.855 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:73)] - Registering SessionFactory: b7acef4c-bf20-4142-9e2e-a13627fc4bbc (<unnamed>)
2022-02-18 19:52:49.855 DEBUG [main][org.hibernate.internal.SessionFactoryRegistry] [addSessionFactory] [org.hibernate.internal.SessionFactoryRegistry.addSessionFactory(SessionFactoryRegistry.java:80)] - Not binding SessionFactory to JNDI, no JNDI name configured
2022-02-18 19:52:49.964 DEBUG [main][org.hibernate.stat.internal.StatisticsInitiator] [initiateServiceInternal] [org.hibernate.stat.internal.StatisticsInitiator.initiateServiceInternal(StatisticsInitiator.java:101)] - Statistics initialized [enabled=false]
2022-02-18 19:52:49.996 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [<init>] [org.hibernate.engine.transaction.internal.TransactionImpl.<init>(TransactionImpl.java:53)] - On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
2022-02-18 19:52:49.996 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:52:50.011 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:52:50.011 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:52:50.043 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 1
2022-02-18 19:52:50.043 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:52:50.058 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:52:50.058 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:52:50.058 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.074 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 2
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 3
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 3 objects
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.089 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.engine.spi.ActionQueue] [addResolvedEntityInsertAction] [org.hibernate.engine.spi.ActionQueue.addResolvedEntityInsertAction(ActionQueue.java:281)] - Executing identity-insert immediately
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    insert 
    into
        TClients
        (name) 
    values
        (?)
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.id.IdentifierGeneratorHelper] [getGeneratedIdentity] [org.hibernate.id.IdentifierGeneratorHelper.getGeneratedIdentity(IdentifierGeneratorHelper.java:78)] - Natively generated identity: 4
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] [release] [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl.release(ResourceRegistryStandardImpl.java:106)] - HHH000387: ResultSet's statement was not registered
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=FARAH, id=4}
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=OMAR, id=1}
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.105 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [begin] [org.hibernate.engine.transaction.internal.TransactionImpl.begin(TransactionImpl.java:81)] - begin
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.engine.transaction.internal.TransactionImpl] [commit] [org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:98)] - committing
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareEntityFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareEntityFlushes(AbstractFlushingEventListener.java:140)] - Processing flush-time cascades
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [prepareCollectionFlushes] [org.hibernate.event.internal.AbstractFlushingEventListener.prepareCollectionFlushes(AbstractFlushingEventListener.java:193)] - Dirty checking collections
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:114)] - Flushed: 0 insertions, 1 updates, 0 deletions to 4 objects
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.event.internal.AbstractFlushingEventListener] [logFlushResults] [org.hibernate.event.internal.AbstractFlushingEventListener.logFlushResults(AbstractFlushingEventListener.java:121)] - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:110)] - Listing entities:
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=FARAH, id=4}
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=AHMED, id=3}
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=SIHAM, id=2}
2022-02-18 19:52:50.121 DEBUG [main][org.hibernate.internal.util.EntityPrinter] [toString] [org.hibernate.internal.util.EntityPrinter.toString(EntityPrinter.java:117)] - cigma.pfe.models.Client{name=new Name, id=1}
2022-02-18 19:52:50.136 DEBUG [main][org.hibernate.SQL] [logStatement] [org.hibernate.engine.jdbc.spi.SqlStatementLogger.logStatement(SqlStatementLogger.java:144)] - 
    update
        TClients 
    set
        name=? 
    where
        id=?
2022-02-18 19:52:50.136 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.136 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
2022-02-18 19:52:50.136 DEBUG [main][org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl] [afterTransaction] [org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.afterTransaction(LogicalConnectionManagedImpl.java:174)] - Initiating JDBC connection release from afterTransaction
